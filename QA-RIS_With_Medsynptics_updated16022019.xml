<channelGroup version="3.4.2">
  <id>33586f55-02ea-4c60-bfe0-a7fa8aac4702</id>
  <name>QA-RIS_With_Medsynptics</name>
  <revision>7</revision>
  <lastModified>
    <time>1550130567065</time>
    <timezone>Asia/Kolkata</timezone>
  </lastModified>
  <description></description>
  <channels>
    <channel version="3.4.2">
      <id>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>DocIT_to_MIRTH_RIS</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1550139813282</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <revision>21</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.jdbc.DatabaseReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>5000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <driver>org.postgresql.Driver</driver>
          <url>jdbc:postgresql://10.10.5.31:5432/docit_qa_oav</url>
          <username>oav_admin</username>
          <password>oav@112233#</password>
          <select>var dbConn;
var dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;org.postgresql.Driver&apos;,&apos;jdbc:postgresql://10.10.5.31:5432/docit_qa_oav&apos;,&apos;oav_admin&apos;,&apos;oav@112233#&apos;);
var result = dbConn.executeCachedQuery(&quot;SELECT T_OutboundHIS.MsgControlID AS HL7OutboundMessage_MessageID,msg AS HL7OutboundMessage_HL7Message FROM T_OutboundHIS WHERE msg like &apos;%OVRAD O01 SEND%&apos; and msgtype=&apos;ORM^O01&apos; and status=0&quot;);
dbConn.close();
return result;</select>
          <update>var dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;org.postgresql.Driver&apos;,&apos;jdbc:postgresql://10.10.5.31:5432/docit_qa_oav&apos;,&apos;oav_admin&apos;,&apos;oav@112233#&apos;);
var exp = &quot;Update T_OutboundHIS set Status = 1 where T_OutboundHIS.MsgControlID = &quot; + $(&apos;hl7outboundmessage_messageid&apos;);
var result = dbConn.executeUpdate(exp);
dbConn.close();</update>
          <useScript>true</useScript>
          <cacheResults>true</cacheResults>
          <keepConnectionOpen>true</keepConnectionOpen>
          <updateMode>3</updateMode>
          <retryCount>3</retryCount>
          <retryInterval>10000</retryInterval>
          <fetchSize>1000</fetchSize>
          <encoding>DEFAULT_ENCODING</encoding>
        </properties>
        <transformer version="3.4.2">
          <steps>
            <step>
              <sequenceNumber>0</sequenceNumber>
              <name>New Step</name>
              <script>var sampmsg = SerializerFactory.getSerializer(&apos;HL7V2&apos;).fromXML(msg);
var temp = msg[&apos;hl7outboundmessage_messageid&apos;];
var samp = sampmsg.replace(&quot;result|hl7outboundmessage_messageid|&quot;,&quot;&quot;);
var samp =  samp.replace(temp+&quot;hl7outboundmessage_hl7message|&quot;,&quot;&quot;);
//logger.info(&quot;samp2=&quot; +samp);
channelMap.put(&apos;vistamsg&apos;,samp)</script>
              <type>JavaScript</type>
              <data>
                <entry>
                  <string>Script</string>
                  <string>var sampmsg = SerializerFactory.getSerializer(&apos;HL7V2&apos;).fromXML(msg);
var temp = msg[&apos;hl7outboundmessage_messageid&apos;];
var samp = sampmsg.replace(&quot;result|hl7outboundmessage_messageid|&quot;,&quot;&quot;);
var samp =  samp.replace(temp+&quot;hl7outboundmessage_hl7message|&quot;,&quot;&quot;);
//logger.info(&quot;samp2=&quot; +samp);
channelMap.put(&apos;vistamsg&apos;,samp)</string>
                </entry>
              </data>
            </step>
          </steps>
          <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8
cmVzdWx0Pg0KICAgIDxobDdvdXRib3VuZG1lc3NhZ2VfbWVzc2FnZWlkPnZhbHVlPC9obDdvdXRi
b3VuZG1lc3NhZ2VfbWVzc2FnZWlkPg0KICAgIDxobDdvdXRib3VuZG1lc3NhZ2VfaGw3bWVzc2Fn
ZT52YWx1ZTwvaGw3b3V0Ym91bmRtZXNzYWdlX2hsN21lc3NhZ2U+DQo8L3Jlc3VsdD4NCg==</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.2">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.2">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>Database Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>Destination To RIS</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <channelId>47b078ca-972a-4fe9-8f48-953cfd39749e</channelId>
            <channelTemplate>${vistamsg}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries>
        <codeTemplateLibrary version="3.4.2">
          <id>3b402060-1297-470c-bcb4-716d35eac750</id>
          <name>Library 1</name>
          <revision>12</revision>
          <lastModified>
            <time>1550124543311</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>0930707b-8ac9-4517-a731-8a88ecc1b5e4</string>
            <string>e3330f6d-f0eb-4bb8-903a-4aca422f1d37</string>
            <string>d5c4d42b-44b1-437d-a958-d0497cb227e3</string>
            <string>9d6f470e-9960-4ab2-a46f-07781e50659d</string>
            <string>94085157-241f-4100-814c-f8284d4ea014</string>
            <string>b13e8580-74b4-4284-b010-0cd936b9b1d8</string>
            <string>98eb8d3f-2777-4ab4-ba1c-f9a88c3f083d</string>
            <string>93ec97d8-aed5-43cd-b455-3df4568e05a7</string>
            <string>883c9458-66cd-4ff3-a09e-cc473a6e4c61</string>
            <string>232e1f16-29db-494b-9344-7280249bb9b6</string>
            <string>105076f4-125e-4493-9b84-91103a637bff</string>
            <string>53589a71-2f65-44a2-ba2d-af4d2046a461</string>
            <string>d617b9e0-b2c3-46da-9bcd-618aba628f97</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>f9bc433c-9bb4-4738-b9b0-bf97b34debf5</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>7c397de3-59d6-414a-9814-024ed7a3310f</string>
            <string>637f1ed7-efaa-4a54-91f6-4238379bfceb</string>
            <string>4ecd041f-73af-423e-ad46-2619602b4a78</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>6ce16191-36c0-4880-8497-377a83aa3082</string>
            <string>1666255f-4e27-4cdf-b182-009267a86bb4</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>eeed1b0b-b1ed-4ab2-a1d1-13eb549f7bbe</string>
            <string>41f93ad4-ecc1-4b38-9ddd-e75f952e682a</string>
            <string>839df7ae-3898-40c8-9319-c91a80739433</string>
            <string>eab9cf10-c82e-46ee-abc7-1b59016f098a</string>
            <string>7ff46f90-1d0b-4524-b4c1-bb7ee34558c5</string>
            <string>fbbb34e7-028d-4b6f-8d50-e76913cdb1f1</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>1fd7370d-da00-4a5e-9404-d78d7214bcda</string>
            <string>c0741da3-afa9-4d76-b7a5-8eedd8066225</string>
            <string>d7f029cb-7fe4-4e46-917c-919aca3a079c</string>
            <string>ddcd1526-8070-402e-bb5f-2091635bc9e1</string>
            <string>9eb3a4b4-464a-4888-81fe-47f60690f8ea</string>
            <string>5d8a378c-f55a-471b-a90c-ca1c8a3cef5a</string>
            <string>2b4ad534-3043-4980-bf15-e2334b696503</string>
            <string>0c9c3346-195b-4c3e-8833-666c8fffa0b0</string>
            <string>d9d49577-9e22-4841-8d40-53354126e6bc</string>
            <string>10d97a0b-c021-4529-8323-1cdf5cb16759</string>
            <string>f2358521-3965-45d8-b10e-75f9fbab3134</string>
            <string>01daa3a3-4329-4ea0-98a7-2f05a2a344b2</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>66b55822-506d-4afe-a196-fb65f1db91d4</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>1677d4fb-8fbb-4d11-b246-8a5584280617</string>
            <string>260287bc-1bc6-4b4e-a382-98b51f11a74c</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>812ce55e-14c7-46d9-beeb-e746ce630183</string>
            <string>1c838bb0-8bb2-4a56-aa79-d2116d0100ea</string>
            <string>65d70067-6b01-4af7-bdf1-af4f242c55d2</string>
            <string>bf03e255-0058-4ec9-851d-61c875751ee1</string>
            <string>d8842088-989b-4e6c-89cb-79441471a4a6</string>
            <string>f91cfe88-1171-4296-b377-518def435067</string>
            <string>7472d142-7885-4677-ba13-c7203db6988c</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>9ff78e04-94a8-4373-90b2-db2a28003081</string>
            <string>79eb47bd-c499-4339-b378-4337eed28536</string>
            <string>d4e79d61-51b2-4446-9d02-48fcf6392651</string>
            <string>0fab424d-56ff-44db-afbe-114869361d13</string>
            <string>e82c928b-33bd-4fb3-9a99-0d851adaa82f</string>
            <string>da3848ba-1da8-4401-9916-b7cda474cbbc</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>10b3d862-4394-498e-b9d5-870037691a8c</string>
            <string>0a3b7e51-be83-466a-add5-6400c45aa8b2</string>
            <string>5a5f6536-66e8-42cf-b9aa-d502a2c3b414</string>
            <string>51ae3581-e3eb-4746-b634-5912a6edaade</string>
            <string>ca3a0496-a538-4df1-b7b5-29165d27227a</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>5638c05f-5afa-467c-8c45-140c60dd8fca</string>
            <string>860a9df1-92e3-4131-86f0-f25201fbb683</string>
            <string>40128672-2ba8-4dc3-8faa-c3b09dbcc8a5</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>35a52068-12f3-4c8d-97b8-e51676a21c13</string>
            <string>98a69b54-8eb6-4a11-a45c-b94b50f16671</string>
            <string>5177210a-55a7-46d8-b632-d2469131f5a9</string>
            <string>0eb149da-4b38-416a-9a9a-59adf19fa664</string>
            <string>159574a3-4d34-4a79-9884-bea5dc42ebe7</string>
            <string>ba9c26c5-0fa8-4ff6-bc54-513cdf570733</string>
            <string>63af1bb3-d1e9-4e77-b358-645d7b4351d5</string>
            <string>c41317dd-1d69-44c8-b1fb-4eabae5b20bc</string>
            <string>31c94c2a-9d00-440b-aadf-b7b1bb7d4bc7</string>
            <string>b07e26af-668b-464b-bd83-e6ba73895a66</string>
            <string>58275a8e-d406-42a4-a81b-64214ea10d17</string>
            <string>ed69ab1e-d270-4414-8061-e869365eb7a9</string>
            <string>f6084ffe-b7f8-437f-b159-57bf2639ac47</string>
            <string>d43231bc-4e28-4da7-98d4-1ce2e84e4a89</string>
            <string>a466faf4-a6ed-4efb-b6da-131309ae7c60</string>
            <string>36324d8e-0936-44bb-9728-fd2b73e167fc</string>
            <string>0189af55-85ad-4bdc-94e7-7cc2ebf5a397</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>160ed5a9-cf99-447b-b1ad-9243f2d73d16</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>2bb13ab0-9c7a-453e-a086-3cfacb9139e6</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347472</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a10e956f-24d7-4dc0-8881-874d638f66fa</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347365</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>138de25a-39db-4929-824e-7e47fc5fb581</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347626</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5de22490-ea08-42c6-b843-e3e347ba51c5</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347769</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>53f0b1a0-17b1-480f-8a6e-6253dc6e2a55</id>
              <name>Template 1</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347708</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function new_function1(arg1) {
	// TODO: Enter code here
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1d28e258-01c7-468b-a464-fbe37771160d</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347549</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
        <codeTemplateLibrary version="3.4.2">
          <id>f6441cbe-8e2f-42a4-bccc-a9c7ed446807</id>
          <name>Library 2</name>
          <revision>16</revision>
          <lastModified>
            <time>1550124543279</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>92743ae8-a745-455c-a433-b23c84ba8614</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>a6ab0cce-4c40-41b3-9306-4d0fbe2e7042</string>
            <string>fe3b2587-55e6-4827-92c2-2c51c588b8b0</string>
            <string>5f7a5987-9eb0-40c6-b9b7-d531c4e63372</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>39c1b8a0-11c3-435f-ba69-9d6c825c7890</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>d4a71fdf-ac13-4843-ae25-a5a2b56f0d90</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>53374354-f1c8-4040-b73a-8257be2b4cf7</string>
            <string>1fdac583-e991-48f1-9562-879950f47c19</string>
            <string>6f1a24e4-7df9-4741-b109-da2b6df00891</string>
            <string>c491713e-cdc5-4b51-9b73-3a44d110381b</string>
            <string>2ed3ff90-9e18-48a8-bf89-fea0b2217a79</string>
            <string>4f562f51-3462-458b-a24c-b2dbbf31140f</string>
            <string>c8adc3f3-024b-48c9-bed9-2b57a2a7f8e5</string>
            <string>1d18266b-a871-49f5-83c8-0d999a4b416d</string>
            <string>52528a47-ea6c-4700-8c03-7c936c23a5bb</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>eb1e2ac4-de08-45e9-8caf-d5e2e94e0780</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>a38a2b7e-05c7-47c5-ac70-845b8912c035</string>
            <string>d0a09853-846d-4622-8917-28ff3ecb27fd</string>
            <string>0db5a28e-6af5-4fe8-82ef-12b9cbd17b4f</string>
            <string>b6f158b2-805c-40b0-8115-6bc00d960590</string>
            <string>fdbe8417-6d73-47ce-b363-c6b95b259a13</string>
            <string>d4abc7f8-0b1d-48f1-a59f-f8d46fe6c802</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>89c0b661-15ee-4998-b66b-d225aa4f9de9</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>e84f2fe6-bcb8-4570-8161-45d30acb65e6</string>
            <string>e17d0add-34c7-4528-b7dd-86489bc7095f</string>
            <string>02cb5f6f-5483-48c9-b897-b132a5da3fb8</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>8b6b203b-70de-4160-b160-e11fa0d4c050</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>52676843-ba2e-4109-9daf-21ca5ada681f</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500785</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>77732e63-d702-4364-b827-58943bce53b9</id>
              <name>GetCurrentHL7DateTime1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068540</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>59f8d35e-8b5a-409b-b1b9-73f14b70ad63</id>
              <name>GetCurrentHL7DateTime11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373417</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e3be9605-1812-4317-99da-29d695938639</id>
              <name>GetCurrentHL7DateTime22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414216</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5662cfc5-0796-4252-b5d4-4853a0c02ed4</id>
              <name>GetCurrentHL7DateTime33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445319</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6bf95548-a7fe-451d-80fe-7841b982a2db</id>
              <name>GetCurrentHL7DateTime4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167552</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f4a50b68-d6a3-47b8-a816-73a98fba68c4</id>
              <name>GetCurrentHL7DateTime44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492803</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa4737d6-53d5-4669-95de-341034e2d039</id>
              <name>GetCurrentHL7DateTime5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207700</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a000d1b4-41e2-4fec-ad81-d84f5c4b57bb</id>
              <name>GetCurrentHL7DateTime6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252760</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>67dc77cd-2244-4ec4-a2f4-eec92e070bc8</id>
              <name>GetCurrentHL7DateTime8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292611</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>b3e0d5ae-46e9-4e68-a1ae-5e36fbed19a6</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500922</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5259eb99-ebc0-40c7-989a-c9728e88e277</id>
              <name>MirthAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068651</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f99b26dd-995a-49f9-aa8f-9167cf152877</id>
              <name>MirthAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373537</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>56397ac3-9f19-4037-8101-39d2ad868e64</id>
              <name>MirthAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414295</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb5e5f27-78f2-4081-8c38-16bff17f27f1</id>
              <name>MirthAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445132</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1b3e0a18-4e94-4a1e-b49b-06282c70e434</id>
              <name>MirthAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167501</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>20a831b4-3302-4283-8eff-cc4bd4a9f08f</id>
              <name>MirthAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492663</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>cdaea5c8-2275-4527-a9d8-b940946451b7</id>
              <name>MirthAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207619</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb89b7ef-8f97-432b-8884-84ef41e05d1f</id>
              <name>MirthAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252807</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e15de9b1-90db-4c8e-b221-6b52431bd229</id>
              <name>MirthAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292657</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dc6a8f19-863e-4903-a666-8cd4b3df2e51</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500973</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a34cb3da-1e3b-4ed5-825f-0427a82470c0</id>
              <name>MirthRcvdCounterAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068615</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>9191af67-946d-4c64-a90e-b0a935006f39</id>
              <name>MirthRcvdCounterAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373488</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>4435d576-3adb-4e14-9063-1a1cd7e838f4</id>
              <name>MirthRcvdCounterAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414114</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8562a117-29de-4993-b6c5-a70d3e9fa668</id>
              <name>MirthRcvdCounterAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445262</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>68652dfa-a24e-43f2-93d9-2777c073cea1</id>
              <name>MirthRcvdCounterAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167603</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>28b31fa8-4d8d-4b86-9e1a-80585f537daf</id>
              <name>MirthRcvdCounterAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492744</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>517b8c85-9da8-43ef-933c-5e7fbb2c474a</id>
              <name>MirthRcvdCounterAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207514</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>961e3e8f-e9fe-438e-8afe-80f1a0954293</id>
              <name>MirthRcvdCounterAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252585</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>51f63c31-fedb-4000-8207-0bec5113049c</id>
              <name>MirthRcvdCounterAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>845dde36-a2af-4f89-a3cf-5795ca7dc227</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500881</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1332f400-ff2b-41d9-9ac1-f2ad98afccb7</id>
              <name>MirthRcvdCounterAlertsFunctionForACK1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068499</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8e414428-22a1-458d-a437-54b870a33a05</id>
              <name>MirthRcvdCounterAlertsFunctionForACK11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373368</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>35bb346d-6d7e-4f86-9897-83950165d404</id>
              <name>MirthRcvdCounterAlertsFunctionForACK22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414352</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ff392f84-6cc6-4774-894c-b65583341e8d</id>
              <name>MirthRcvdCounterAlertsFunctionForACK33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445207</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa9566b3-52a9-4b8d-9e4a-966d65d5e437</id>
              <name>MirthRcvdCounterAlertsFunctionForACK4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>956b1ddb-c1a3-4f2f-8fd8-766ac544998a</id>
              <name>MirthRcvdCounterAlertsFunctionForACK44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492606</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dffc8508-f86b-470e-9be1-a3c20a43b370</id>
              <name>MirthRcvdCounterAlertsFunctionForACK5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207556</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6ae4f0c5-fd99-408d-b028-28a82e1679d2</id>
              <name>MirthRcvdCounterAlertsFunctionForACK6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252640</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a9c44ad3-a410-4f60-95f5-9a4023efd36c</id>
              <name>MirthRcvdCounterAlertsFunctionForACK8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292546</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>2811c681-f8f9-418e-a3d8-444f73bf393a</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500818</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bd954cbb-7f03-412d-a940-e32a8a11a7d1</id>
              <name>V2H Date Change1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068576</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a221937e-860e-4361-afc9-b0f2222fdaa2</id>
              <name>V2H Date Change11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373592</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>01977bc4-41b0-4721-9e08-8b896fda7ca5</id>
              <name>V2H Date Change22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414161</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5110ca7a-956f-46ac-b850-8b56e32a323e</id>
              <name>V2H Date Change33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445389</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e2236300-3000-4109-b0ad-9c2c89c1b06c</id>
              <name>V2H Date Change4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167673</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5c5fb4be-a443-4871-8af9-039fd42b08aa</id>
              <name>V2H Date Change44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492867</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a7734218-419b-4fe7-9032-5832398fe1e0</id>
              <name>V2H Date Change5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207661</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>d7989778-c82d-4f70-bd89-cce46fd40eb3</id>
              <name>V2H Date Change6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252696</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ad673099-8976-4470-93e7-c15be699ccda</id>
              <name>V2H Date Change8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292484</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
      </codeTemplateLibraries>
    </channel>
    <channel version="3.4.2">
      <id>47b078ca-972a-4fe9-8f48-953cfd39749e</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>MIRTH_To_RIS</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1549956900136</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <revision>49</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>Channel Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>RIS</name>
          <properties class="com.mirth.connect.connectors.tcp.TcpDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>true</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
              <pluginPointName>MLLP</pluginPointName>
              <startOfMessageBytes>0B</startOfMessageBytes>
              <endOfMessageBytes>1C0D</endOfMessageBytes>
              <useMLLPv2>false</useMLLPv2>
              <ackBytes>06</ackBytes>
              <nackBytes>15</nackBytes>
              <maxRetries>2</maxRetries>
            </transmissionModeProperties>
            <remoteAddress>173.212.236.69</remoteAddress>
            <remotePort>106</remotePort>
            <overrideLocalBinding>false</overrideLocalBinding>
            <localAddress>0.0.0.0</localAddress>
            <localPort>0</localPort>
            <sendTimeout>5000</sendTimeout>
            <bufferSize>65536</bufferSize>
            <keepConnectionOpen>false</keepConnectionOpen>
            <checkRemoteHost>false</checkRemoteHost>
            <responseTimeout>5000</responseTimeout>
            <ignoreResponse>false</ignoreResponse>
            <queueOnResponseTimeout>true</queueOnResponseTimeout>
            <dataTypeBinary>false</dataTypeBinary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>Mapping Values</name>
                <script>channelMap.put(&quot;MSGID&quot;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString())
channelMap.put(&quot;MRNO&quot;,msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString())
channelMap.put(&quot;FNAME&quot;,msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.3&apos;].toString())
channelMap.put(&quot;MNAME&quot;,msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;].toString())
channelMap.put(&quot;LNAME&quot;,msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString())
channelMap.put(&quot;DOB&quot;,msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString())
channelMap.put(&quot;SEX&quot;,msg[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;].toString())
channelMap.put(&quot;SEX&quot;,msg[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;].toString())
channelMap.put(&quot;SADRESS&quot;,msg[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;].toString())
channelMap.put(&quot;PHONENO&quot;,msg[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;].toString())
channelMap.put(&quot;MSTATUS&quot;,msg[&apos;PID&apos;][&apos;PID.16&apos;][&apos;PID.16.1&apos;].toString())
channelMap.put(&quot;ADMID&quot;,msg[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString())
channelMap.put(&quot;ACCNO&quot;,msg[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;].toString())
channelMap.put(&quot;SPSID&quot;,msg[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.1&apos;].toString())
channelMap.put(&quot;PhyID&quot;,msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.1&apos;].toString())
channelMap.put(&quot;PhyNamef&quot;,msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.3&apos;].toString())
channelMap.put(&quot;PhyNamel&quot;,msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.2&apos;].toString())
channelMap.put(&quot;OrderDT&quot;,msg[&apos;ORC&apos;][&apos;ORC.9&apos;][&apos;ORC.9.1&apos;].toString())</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&quot;MSGID&quot;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString())
channelMap.put(&quot;MRNO&quot;,msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString())
channelMap.put(&quot;FNAME&quot;,msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.3&apos;].toString())
channelMap.put(&quot;MNAME&quot;,msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;].toString())
channelMap.put(&quot;LNAME&quot;,msg[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;].toString())
channelMap.put(&quot;DOB&quot;,msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString())
channelMap.put(&quot;SEX&quot;,msg[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;].toString())
channelMap.put(&quot;SEX&quot;,msg[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;].toString())
channelMap.put(&quot;SADRESS&quot;,msg[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;].toString())
channelMap.put(&quot;PHONENO&quot;,msg[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;].toString())
channelMap.put(&quot;MSTATUS&quot;,msg[&apos;PID&apos;][&apos;PID.16&apos;][&apos;PID.16.1&apos;].toString())
channelMap.put(&quot;ADMID&quot;,msg[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString())
channelMap.put(&quot;ACCNO&quot;,msg[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;].toString())
channelMap.put(&quot;SPSID&quot;,msg[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.1&apos;].toString())
channelMap.put(&quot;PhyID&quot;,msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.1&apos;].toString())
channelMap.put(&quot;PhyNamef&quot;,msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.3&apos;].toString())
channelMap.put(&quot;PhyNamel&quot;,msg[&apos;PV1&apos;][&apos;PV1.7&apos;][&apos;PV1.7.2&apos;].toString())
channelMap.put(&quot;OrderDT&quot;,msg[&apos;ORC&apos;][&apos;ORC.9&apos;][&apos;ORC.9.1&apos;].toString())</string>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>1</sequenceNumber>
                <name>PatientID</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;] = validate($(&apos;MRNO&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;MRNO&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>2</sequenceNumber>
                <name>PatientLastName</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;] = validate($(&apos;LNAME&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;LNAME&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>3</sequenceNumber>
                <name>PatientMiddleName</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;] = validate($(&apos;MNAME&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;MNAME&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>4</sequenceNumber>
                <name>PatientFirstName</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.3&apos;] = validate($(&apos;FNAME&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.3&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;FNAME&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>5</sequenceNumber>
                <name>DOB</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;] = validate($(&apos;DOB&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;DOB&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>6</sequenceNumber>
                <name>SADDRESS</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;] = validate($(&apos;SADDRESS&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;SADDRESS&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>7</sequenceNumber>
                <name>PHONENO</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;] = validate($(&apos;PHONENO&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;PHONENO&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>8</sequenceNumber>
                <name>Marital STATUS</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.16&apos;][&apos;PID.16.1&apos;] = validate($(&apos;MSTATUS&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.16&apos;][&apos;PID.16.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;MSTATUS&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>9</sequenceNumber>
                <name>Admission Id</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;] = validate($(&apos;ADMID&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;ADMID&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>10</sequenceNumber>
                <name>Msg Control Id</name>
                <script>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;] = validate($(&apos;MSGID&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;MSGID&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>11</sequenceNumber>
                <name>ACC. N0.</name>
                <script>tmp[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;] = validate($(&apos;ACCNO&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;ACCNO&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>12</sequenceNumber>
                <name>Service Universal id</name>
                <script>tmp[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.1&apos;] = validate($(&apos;SPSID&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;SPSID&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>13</sequenceNumber>
                <name>Phy id</name>
                <script>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.1&apos;] = validate($(&apos;PhyID&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;PhyID&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>14</sequenceNumber>
                <name>Set Date</name>
                <script>var datesend=msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString();

if(datesend==&apos;&apos;)
{
	tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]=GetCurrentHL7DateTime();
}
else
{
	tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]=msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;];
}</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var datesend=msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString();

if(datesend==&apos;&apos;)
{
	tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]=GetCurrentHL7DateTime();
}
else
{
	tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]=msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;];
}</string>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>15</sequenceNumber>
                <name>Type of admission</name>
                <script>var Typ=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString();
if(Typ==&apos;ORM&apos;)
{
	logger.info(Typ);
	var AdtTyp=msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString();
	logger.info(AdtTyp);
	if(AdtTyp==&apos;O&apos;)
	{
		logger.info(AdtTyp);
		//tmp[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]=&quot;OP&quot;;
		tmp[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;]=&quot;OP&quot;;
	}
	if(AdtTyp==&apos;I&apos;)
	{
		logger.info(AdtTyp);
		tmp[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;]=&quot;IP&quot;;
	}
}</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var Typ=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString();
if(Typ==&apos;ORM&apos;)
{
	logger.info(Typ);
	var AdtTyp=msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString();
	logger.info(AdtTyp);
	if(AdtTyp==&apos;O&apos;)
	{
		logger.info(AdtTyp);
		//tmp[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]=&quot;OP&quot;;
		tmp[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;]=&quot;OP&quot;;
	}
	if(AdtTyp==&apos;I&apos;)
	{
		logger.info(AdtTyp);
		tmp[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;]=&quot;IP&quot;;
	}
}</string>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>16</sequenceNumber>
                <name>SEX</name>
                <script>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;] = validate($(&apos;SEX&apos;), &apos;&apos;, new Array());</script>
                <type>Message Builder</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;]</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>$(&apos;SEX&apos;)</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8T1ZSQUQgTzAxIFNFTkR8RG9jSVR8T1ZSQUQgTzAxIFJFQ1Z8b2h1bURvY3wyMDE5
MDExMTAwMDAwMHx8T1JNXk8wMXwxNTUyMnxQfDIuNXx8fEFMfE5FfElORApQSUR8MXx8U0hLSS0y
MTA3MTgwMTE3MzY2fHxNb3VyeWFeQmluaXRhXkFzaG9rfHwxOTg4MDEwMTAwMDAwMHxGfHx8S2Vz
aGF2IE5haGFyLCBTYW1iaGFqaSBDaG93aywgTXVuZGh3YSwgSGFwYWRzYXJeXlB1bmVeMTdeNDEx
MDE0XjEwMnx8Nzc1ODg5NjczNXwwfHx8fHx8fHx8fHx8fHwxClBWMXwxfE98fHx8fDI3XkRIT1JF
UEFUSUxeU0hSSUhBUkl8fDI3XkRIT1JFUEFUSUxeU0hSSUhBUkl8fHx8fHx8fHx8Vi9TSEsvMTgv
MDA1NTR8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fDEwfHx8fHx8fHx8fDI3XkRIT1JFUEFUSUxeU0hS
SUhBUkkKT1JDfE5XfFJBRDIxN3x8fHx8MjAxODA3MjExNDE3MzF8fDIwMTgwNzIxMTQxNzMxfDc2
NXw3NjV8Mjd8MTB8fHwxfDMKT0JSfDF8UkFEMjE3fHw0NDUyOHx8fHx8fHx8fHx8fHx8fHx8fHx8
fHx8Xl5eXl4x</inboundTemplate>
            <outboundTemplate encoding="base64">TVNIfF5+XCZ8T1ZSQUQgTzAxIFNFTkR8RG9jSVR8UEFDU3xQQUNTfDIwMTMwNjE0MTMxNDE1fHxP
Uk1eTzAxfE1zZ0N0cmxJZF9PUk18UHwyLjMKUElEfDF8fFBhdGllbnRJRHx8UGF0aWVudExhc3Re
Rmlyc3ReTWlkZGxlXnx8MjAwMDA1MTR8RgpQVjF8MXx8fHx8fHxSZWZQaHlJRHx8fHx8fHx8fHxP
UHx8Ck9SQ3xOVwpPQlJ8MXxTUjAxfHxTdHVkeUlE</outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>TCP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries>
        <codeTemplateLibrary version="3.4.2">
          <id>3b402060-1297-470c-bcb4-716d35eac750</id>
          <name>Library 1</name>
          <revision>12</revision>
          <lastModified>
            <time>1550124543311</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>0930707b-8ac9-4517-a731-8a88ecc1b5e4</string>
            <string>e3330f6d-f0eb-4bb8-903a-4aca422f1d37</string>
            <string>d5c4d42b-44b1-437d-a958-d0497cb227e3</string>
            <string>9d6f470e-9960-4ab2-a46f-07781e50659d</string>
            <string>94085157-241f-4100-814c-f8284d4ea014</string>
            <string>b13e8580-74b4-4284-b010-0cd936b9b1d8</string>
            <string>98eb8d3f-2777-4ab4-ba1c-f9a88c3f083d</string>
            <string>93ec97d8-aed5-43cd-b455-3df4568e05a7</string>
            <string>883c9458-66cd-4ff3-a09e-cc473a6e4c61</string>
            <string>232e1f16-29db-494b-9344-7280249bb9b6</string>
            <string>105076f4-125e-4493-9b84-91103a637bff</string>
            <string>53589a71-2f65-44a2-ba2d-af4d2046a461</string>
            <string>d617b9e0-b2c3-46da-9bcd-618aba628f97</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>f9bc433c-9bb4-4738-b9b0-bf97b34debf5</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>7c397de3-59d6-414a-9814-024ed7a3310f</string>
            <string>637f1ed7-efaa-4a54-91f6-4238379bfceb</string>
            <string>4ecd041f-73af-423e-ad46-2619602b4a78</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>6ce16191-36c0-4880-8497-377a83aa3082</string>
            <string>1666255f-4e27-4cdf-b182-009267a86bb4</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>eeed1b0b-b1ed-4ab2-a1d1-13eb549f7bbe</string>
            <string>41f93ad4-ecc1-4b38-9ddd-e75f952e682a</string>
            <string>839df7ae-3898-40c8-9319-c91a80739433</string>
            <string>eab9cf10-c82e-46ee-abc7-1b59016f098a</string>
            <string>7ff46f90-1d0b-4524-b4c1-bb7ee34558c5</string>
            <string>fbbb34e7-028d-4b6f-8d50-e76913cdb1f1</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>1fd7370d-da00-4a5e-9404-d78d7214bcda</string>
            <string>c0741da3-afa9-4d76-b7a5-8eedd8066225</string>
            <string>d7f029cb-7fe4-4e46-917c-919aca3a079c</string>
            <string>ddcd1526-8070-402e-bb5f-2091635bc9e1</string>
            <string>9eb3a4b4-464a-4888-81fe-47f60690f8ea</string>
            <string>5d8a378c-f55a-471b-a90c-ca1c8a3cef5a</string>
            <string>2b4ad534-3043-4980-bf15-e2334b696503</string>
            <string>0c9c3346-195b-4c3e-8833-666c8fffa0b0</string>
            <string>d9d49577-9e22-4841-8d40-53354126e6bc</string>
            <string>10d97a0b-c021-4529-8323-1cdf5cb16759</string>
            <string>f2358521-3965-45d8-b10e-75f9fbab3134</string>
            <string>01daa3a3-4329-4ea0-98a7-2f05a2a344b2</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>66b55822-506d-4afe-a196-fb65f1db91d4</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>1677d4fb-8fbb-4d11-b246-8a5584280617</string>
            <string>260287bc-1bc6-4b4e-a382-98b51f11a74c</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>812ce55e-14c7-46d9-beeb-e746ce630183</string>
            <string>1c838bb0-8bb2-4a56-aa79-d2116d0100ea</string>
            <string>65d70067-6b01-4af7-bdf1-af4f242c55d2</string>
            <string>bf03e255-0058-4ec9-851d-61c875751ee1</string>
            <string>d8842088-989b-4e6c-89cb-79441471a4a6</string>
            <string>f91cfe88-1171-4296-b377-518def435067</string>
            <string>7472d142-7885-4677-ba13-c7203db6988c</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>9ff78e04-94a8-4373-90b2-db2a28003081</string>
            <string>79eb47bd-c499-4339-b378-4337eed28536</string>
            <string>d4e79d61-51b2-4446-9d02-48fcf6392651</string>
            <string>0fab424d-56ff-44db-afbe-114869361d13</string>
            <string>e82c928b-33bd-4fb3-9a99-0d851adaa82f</string>
            <string>da3848ba-1da8-4401-9916-b7cda474cbbc</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>10b3d862-4394-498e-b9d5-870037691a8c</string>
            <string>0a3b7e51-be83-466a-add5-6400c45aa8b2</string>
            <string>5a5f6536-66e8-42cf-b9aa-d502a2c3b414</string>
            <string>51ae3581-e3eb-4746-b634-5912a6edaade</string>
            <string>ca3a0496-a538-4df1-b7b5-29165d27227a</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>5638c05f-5afa-467c-8c45-140c60dd8fca</string>
            <string>860a9df1-92e3-4131-86f0-f25201fbb683</string>
            <string>40128672-2ba8-4dc3-8faa-c3b09dbcc8a5</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>35a52068-12f3-4c8d-97b8-e51676a21c13</string>
            <string>98a69b54-8eb6-4a11-a45c-b94b50f16671</string>
            <string>5177210a-55a7-46d8-b632-d2469131f5a9</string>
            <string>0eb149da-4b38-416a-9a9a-59adf19fa664</string>
            <string>159574a3-4d34-4a79-9884-bea5dc42ebe7</string>
            <string>ba9c26c5-0fa8-4ff6-bc54-513cdf570733</string>
            <string>63af1bb3-d1e9-4e77-b358-645d7b4351d5</string>
            <string>c41317dd-1d69-44c8-b1fb-4eabae5b20bc</string>
            <string>31c94c2a-9d00-440b-aadf-b7b1bb7d4bc7</string>
            <string>b07e26af-668b-464b-bd83-e6ba73895a66</string>
            <string>58275a8e-d406-42a4-a81b-64214ea10d17</string>
            <string>ed69ab1e-d270-4414-8061-e869365eb7a9</string>
            <string>f6084ffe-b7f8-437f-b159-57bf2639ac47</string>
            <string>d43231bc-4e28-4da7-98d4-1ce2e84e4a89</string>
            <string>a466faf4-a6ed-4efb-b6da-131309ae7c60</string>
            <string>36324d8e-0936-44bb-9728-fd2b73e167fc</string>
            <string>0189af55-85ad-4bdc-94e7-7cc2ebf5a397</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>160ed5a9-cf99-447b-b1ad-9243f2d73d16</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>2bb13ab0-9c7a-453e-a086-3cfacb9139e6</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347472</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a10e956f-24d7-4dc0-8881-874d638f66fa</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347365</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>138de25a-39db-4929-824e-7e47fc5fb581</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347626</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5de22490-ea08-42c6-b843-e3e347ba51c5</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347769</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>53f0b1a0-17b1-480f-8a6e-6253dc6e2a55</id>
              <name>Template 1</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347708</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function new_function1(arg1) {
	// TODO: Enter code here
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1d28e258-01c7-468b-a464-fbe37771160d</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347549</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
        <codeTemplateLibrary version="3.4.2">
          <id>f6441cbe-8e2f-42a4-bccc-a9c7ed446807</id>
          <name>Library 2</name>
          <revision>16</revision>
          <lastModified>
            <time>1550124543279</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>92743ae8-a745-455c-a433-b23c84ba8614</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>a6ab0cce-4c40-41b3-9306-4d0fbe2e7042</string>
            <string>fe3b2587-55e6-4827-92c2-2c51c588b8b0</string>
            <string>5f7a5987-9eb0-40c6-b9b7-d531c4e63372</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>39c1b8a0-11c3-435f-ba69-9d6c825c7890</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>d4a71fdf-ac13-4843-ae25-a5a2b56f0d90</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>53374354-f1c8-4040-b73a-8257be2b4cf7</string>
            <string>1fdac583-e991-48f1-9562-879950f47c19</string>
            <string>6f1a24e4-7df9-4741-b109-da2b6df00891</string>
            <string>c491713e-cdc5-4b51-9b73-3a44d110381b</string>
            <string>2ed3ff90-9e18-48a8-bf89-fea0b2217a79</string>
            <string>4f562f51-3462-458b-a24c-b2dbbf31140f</string>
            <string>c8adc3f3-024b-48c9-bed9-2b57a2a7f8e5</string>
            <string>1d18266b-a871-49f5-83c8-0d999a4b416d</string>
            <string>52528a47-ea6c-4700-8c03-7c936c23a5bb</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>eb1e2ac4-de08-45e9-8caf-d5e2e94e0780</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>a38a2b7e-05c7-47c5-ac70-845b8912c035</string>
            <string>d0a09853-846d-4622-8917-28ff3ecb27fd</string>
            <string>0db5a28e-6af5-4fe8-82ef-12b9cbd17b4f</string>
            <string>b6f158b2-805c-40b0-8115-6bc00d960590</string>
            <string>fdbe8417-6d73-47ce-b363-c6b95b259a13</string>
            <string>d4abc7f8-0b1d-48f1-a59f-f8d46fe6c802</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>89c0b661-15ee-4998-b66b-d225aa4f9de9</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>e84f2fe6-bcb8-4570-8161-45d30acb65e6</string>
            <string>e17d0add-34c7-4528-b7dd-86489bc7095f</string>
            <string>02cb5f6f-5483-48c9-b897-b132a5da3fb8</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>8b6b203b-70de-4160-b160-e11fa0d4c050</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>52676843-ba2e-4109-9daf-21ca5ada681f</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500785</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>77732e63-d702-4364-b827-58943bce53b9</id>
              <name>GetCurrentHL7DateTime1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068540</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>59f8d35e-8b5a-409b-b1b9-73f14b70ad63</id>
              <name>GetCurrentHL7DateTime11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373417</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e3be9605-1812-4317-99da-29d695938639</id>
              <name>GetCurrentHL7DateTime22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414216</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5662cfc5-0796-4252-b5d4-4853a0c02ed4</id>
              <name>GetCurrentHL7DateTime33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445319</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6bf95548-a7fe-451d-80fe-7841b982a2db</id>
              <name>GetCurrentHL7DateTime4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167552</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f4a50b68-d6a3-47b8-a816-73a98fba68c4</id>
              <name>GetCurrentHL7DateTime44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492803</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa4737d6-53d5-4669-95de-341034e2d039</id>
              <name>GetCurrentHL7DateTime5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207700</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a000d1b4-41e2-4fec-ad81-d84f5c4b57bb</id>
              <name>GetCurrentHL7DateTime6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252760</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>67dc77cd-2244-4ec4-a2f4-eec92e070bc8</id>
              <name>GetCurrentHL7DateTime8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292611</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>b3e0d5ae-46e9-4e68-a1ae-5e36fbed19a6</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500922</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5259eb99-ebc0-40c7-989a-c9728e88e277</id>
              <name>MirthAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068651</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f99b26dd-995a-49f9-aa8f-9167cf152877</id>
              <name>MirthAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373537</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>56397ac3-9f19-4037-8101-39d2ad868e64</id>
              <name>MirthAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414295</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb5e5f27-78f2-4081-8c38-16bff17f27f1</id>
              <name>MirthAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445132</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1b3e0a18-4e94-4a1e-b49b-06282c70e434</id>
              <name>MirthAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167501</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>20a831b4-3302-4283-8eff-cc4bd4a9f08f</id>
              <name>MirthAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492663</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>cdaea5c8-2275-4527-a9d8-b940946451b7</id>
              <name>MirthAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207619</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb89b7ef-8f97-432b-8884-84ef41e05d1f</id>
              <name>MirthAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252807</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e15de9b1-90db-4c8e-b221-6b52431bd229</id>
              <name>MirthAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292657</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dc6a8f19-863e-4903-a666-8cd4b3df2e51</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500973</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a34cb3da-1e3b-4ed5-825f-0427a82470c0</id>
              <name>MirthRcvdCounterAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068615</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>9191af67-946d-4c64-a90e-b0a935006f39</id>
              <name>MirthRcvdCounterAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373488</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>4435d576-3adb-4e14-9063-1a1cd7e838f4</id>
              <name>MirthRcvdCounterAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414114</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8562a117-29de-4993-b6c5-a70d3e9fa668</id>
              <name>MirthRcvdCounterAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445262</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>68652dfa-a24e-43f2-93d9-2777c073cea1</id>
              <name>MirthRcvdCounterAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167603</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>28b31fa8-4d8d-4b86-9e1a-80585f537daf</id>
              <name>MirthRcvdCounterAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492744</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>517b8c85-9da8-43ef-933c-5e7fbb2c474a</id>
              <name>MirthRcvdCounterAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207514</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>961e3e8f-e9fe-438e-8afe-80f1a0954293</id>
              <name>MirthRcvdCounterAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252585</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>51f63c31-fedb-4000-8207-0bec5113049c</id>
              <name>MirthRcvdCounterAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>845dde36-a2af-4f89-a3cf-5795ca7dc227</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500881</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1332f400-ff2b-41d9-9ac1-f2ad98afccb7</id>
              <name>MirthRcvdCounterAlertsFunctionForACK1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068499</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8e414428-22a1-458d-a437-54b870a33a05</id>
              <name>MirthRcvdCounterAlertsFunctionForACK11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373368</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>35bb346d-6d7e-4f86-9897-83950165d404</id>
              <name>MirthRcvdCounterAlertsFunctionForACK22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414352</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ff392f84-6cc6-4774-894c-b65583341e8d</id>
              <name>MirthRcvdCounterAlertsFunctionForACK33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445207</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa9566b3-52a9-4b8d-9e4a-966d65d5e437</id>
              <name>MirthRcvdCounterAlertsFunctionForACK4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>956b1ddb-c1a3-4f2f-8fd8-766ac544998a</id>
              <name>MirthRcvdCounterAlertsFunctionForACK44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492606</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dffc8508-f86b-470e-9be1-a3c20a43b370</id>
              <name>MirthRcvdCounterAlertsFunctionForACK5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207556</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6ae4f0c5-fd99-408d-b028-28a82e1679d2</id>
              <name>MirthRcvdCounterAlertsFunctionForACK6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252640</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a9c44ad3-a410-4f60-95f5-9a4023efd36c</id>
              <name>MirthRcvdCounterAlertsFunctionForACK8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292546</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>2811c681-f8f9-418e-a3d8-444f73bf393a</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500818</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bd954cbb-7f03-412d-a940-e32a8a11a7d1</id>
              <name>V2H Date Change1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068576</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a221937e-860e-4361-afc9-b0f2222fdaa2</id>
              <name>V2H Date Change11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373592</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>01977bc4-41b0-4721-9e08-8b896fda7ca5</id>
              <name>V2H Date Change22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414161</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5110ca7a-956f-46ac-b850-8b56e32a323e</id>
              <name>V2H Date Change33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445389</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e2236300-3000-4109-b0ad-9c2c89c1b06c</id>
              <name>V2H Date Change4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167673</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5c5fb4be-a443-4871-8af9-039fd42b08aa</id>
              <name>V2H Date Change44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492867</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a7734218-419b-4fe7-9032-5832398fe1e0</id>
              <name>V2H Date Change5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207661</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>d7989778-c82d-4f70-bd89-cce46fd40eb3</id>
              <name>V2H Date Change6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252696</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ad673099-8976-4470-93e7-c15be699ccda</id>
              <name>V2H Date Change8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292484</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
      </codeTemplateLibraries>
    </channel>
    <channel version="3.4.2">
      <id>e36267e9-3de6-4335-ab6a-69f1f4e306e4</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>RIS_to_Vista-Docit</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1550289659870</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <revision>151</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>6661</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress></responseAddress>
          <responsePort></responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps>
            <step>
              <sequenceNumber>0</sequenceNumber>
              <name>Medsynaptics Transformer for Result Message</name>
              <script>var vistapro=msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;].toString();
if(vistapro==&apos;2.3&apos;)
{
	logger.info(&quot;oru&quot;)
	msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;]=&apos;2.5&apos;
}

var MSGTYP=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString()
if (MSGTYP==&quot;ORU&quot;)
{
	logger.info(&quot;oru&quot;)
	var SENAPP=msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;].toString()
	if (SENAPP==&quot;RIS&quot;)
	{
		logger.info(&quot;oru&quot;)
		
		var SERVICEIEN=msg[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.1&apos;].toString();
		
		msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]=&quot;RIS R01&quot;
		//msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]=&quot;MIRTH&quot;;
		msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]=&quot;VISTA R01&quot;
		//msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]=&quot;VISTA&quot;
		msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;]=&quot;AL&quot;
		msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;]=&quot;NE&quot;
		msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;]=&quot;IND&quot;
 		
	 	msg[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.1&apos;]=SERVICEIEN

		//setting technician ien
		var TECHIEN=msg[&apos;ORC&apos;][&apos;ORC.11&apos;][&apos;ORC.11.1&apos;].toString();
 		msg[&apos;OBR&apos;][&apos;OBR.34&apos;][&apos;OBR.34.1&apos;]=TECHIEN

 		
		//setting date for result message
	 	var datetime=msg[&apos;OBR&apos;][&apos;OBR.36&apos;][&apos;OBR.36.1&apos;].toString();
	 	msg[&apos;OBR&apos;][&apos;OBR.7&apos;][&apos;OBR.7.1&apos;]=datetime
	 	msg[&apos;OBR&apos;][&apos;OBR.8&apos;][&apos;OBR.8.1&apos;]=datetime
		msg[&apos;OBR&apos;][&apos;OBR.22&apos;][&apos;OBR.22.1&apos;]=datetime
		msg[&apos;OBR&apos;][&apos;OBR.36&apos;][&apos;OBR.36.1&apos;]=datetime
		
		//Creating PV1 segment
		createSegmentAfter(&apos;PV1&apos;,msg[&apos;PID&apos;])

		//Creating ORC segment
		createSegmentAfter(&apos;ORC&apos;,msg[&apos;PV1&apos;])
		msg[&apos;ORC&apos;][&apos;ORC.1&apos;][&apos;ORC.1.1&apos;]=&quot;RE&quot;
		msg[&apos;ORC&apos;][&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]=msg[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;]
		msg[&apos;OBR&apos;][&apos;OBR.3&apos;][&apos;OBR.3.1&apos;]=msg[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;]
		var OBRESST=msg[&apos;OBX&apos;][&apos;OBX.11&apos;][&apos;OBX.11.1&apos;]
		if (OBRESST==&quot;F&quot;)
		{
			msg[&apos;ORC&apos;][&apos;ORC.5&apos;][&apos;ORC.5.1&apos;]=&quot;COMPLETED&quot;
		}
		var resflag=msg[&apos;ORC&apos;][&apos;ORC.6&apos;][&apos;ORC.6.1&apos;].toString();
		if(resflag==&apos;&apos;)
		{
			msg[&apos;ORC&apos;][&apos;ORC.6&apos;][&apos;ORC.6.1&apos;]=&apos;N&apos;;
		}
		msg[&apos;ORC&apos;][&apos;ORC.9&apos;][&apos;ORC.9.1&apos;]=datetime
		msg[&apos;ORC&apos;][&apos;ORC.10&apos;][&apos;ORC.10.1&apos;]=&apos;85&apos;;
		msg[&apos;ORC&apos;][&apos;ORC.11&apos;][&apos;ORC.11.1&apos;]=&apos;85&apos;;
		msg[&apos;ORC&apos;][&apos;ORC.12&apos;][&apos;ORC.12.1&apos;]=&apos;85&apos;;
		msg[&apos;ORC&apos;][&apos;ORC.17&apos;][&apos;ORC.17.1&apos;]=&apos;RADEXT&apos;;
		msg[&apos;ORC&apos;][&apos;ORC.18&apos;][&apos;ORC.18.1&apos;]=&apos;RADEXT&apos;;
		
		//creating NTE segment
		msg[&apos;NTE&apos;]
		msg[&apos;NTE&apos;][&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]
		msg[&apos;NTE&apos;][&apos;NTE.3&apos;][&apos;NTE.3.1&apos;]=&quot;RAD&quot;
		}	
}</script>
              <type>JavaScript</type>
              <data>
                <entry>
                  <string>Script</string>
                  <string>var vistapro=msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;].toString();
if(vistapro==&apos;2.3&apos;)
{
	logger.info(&quot;oru&quot;)
	msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;]=&apos;2.5&apos;
}

var MSGTYP=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString()
if (MSGTYP==&quot;ORU&quot;)
{
	logger.info(&quot;oru&quot;)
	var SENAPP=msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;].toString()
	if (SENAPP==&quot;RIS&quot;)
	{
		logger.info(&quot;oru&quot;)
		
		var SERVICEIEN=msg[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.1&apos;].toString();
		
		msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]=&quot;RIS R01&quot;
		//msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]=&quot;MIRTH&quot;;
		msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]=&quot;VISTA R01&quot;
		//msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]=&quot;VISTA&quot;
		msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;]=&quot;AL&quot;
		msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;]=&quot;NE&quot;
		msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;]=&quot;IND&quot;
 		
	 	msg[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.1&apos;]=SERVICEIEN

		//setting technician ien
		var TECHIEN=msg[&apos;ORC&apos;][&apos;ORC.11&apos;][&apos;ORC.11.1&apos;].toString();
 		msg[&apos;OBR&apos;][&apos;OBR.34&apos;][&apos;OBR.34.1&apos;]=TECHIEN

 		
		//setting date for result message
	 	var datetime=msg[&apos;OBR&apos;][&apos;OBR.36&apos;][&apos;OBR.36.1&apos;].toString();
	 	msg[&apos;OBR&apos;][&apos;OBR.7&apos;][&apos;OBR.7.1&apos;]=datetime
	 	msg[&apos;OBR&apos;][&apos;OBR.8&apos;][&apos;OBR.8.1&apos;]=datetime
		msg[&apos;OBR&apos;][&apos;OBR.22&apos;][&apos;OBR.22.1&apos;]=datetime
		msg[&apos;OBR&apos;][&apos;OBR.36&apos;][&apos;OBR.36.1&apos;]=datetime
		
		//Creating PV1 segment
		createSegmentAfter(&apos;PV1&apos;,msg[&apos;PID&apos;])

		//Creating ORC segment
		createSegmentAfter(&apos;ORC&apos;,msg[&apos;PV1&apos;])
		msg[&apos;ORC&apos;][&apos;ORC.1&apos;][&apos;ORC.1.1&apos;]=&quot;RE&quot;
		msg[&apos;ORC&apos;][&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]=msg[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;]
		msg[&apos;OBR&apos;][&apos;OBR.3&apos;][&apos;OBR.3.1&apos;]=msg[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;]
		var OBRESST=msg[&apos;OBX&apos;][&apos;OBX.11&apos;][&apos;OBX.11.1&apos;]
		if (OBRESST==&quot;F&quot;)
		{
			msg[&apos;ORC&apos;][&apos;ORC.5&apos;][&apos;ORC.5.1&apos;]=&quot;COMPLETED&quot;
		}
		var resflag=msg[&apos;ORC&apos;][&apos;ORC.6&apos;][&apos;ORC.6.1&apos;].toString();
		if(resflag==&apos;&apos;)
		{
			msg[&apos;ORC&apos;][&apos;ORC.6&apos;][&apos;ORC.6.1&apos;]=&apos;N&apos;;
		}
		msg[&apos;ORC&apos;][&apos;ORC.9&apos;][&apos;ORC.9.1&apos;]=datetime
		msg[&apos;ORC&apos;][&apos;ORC.10&apos;][&apos;ORC.10.1&apos;]=&apos;85&apos;;
		msg[&apos;ORC&apos;][&apos;ORC.11&apos;][&apos;ORC.11.1&apos;]=&apos;85&apos;;
		msg[&apos;ORC&apos;][&apos;ORC.12&apos;][&apos;ORC.12.1&apos;]=&apos;85&apos;;
		msg[&apos;ORC&apos;][&apos;ORC.17&apos;][&apos;ORC.17.1&apos;]=&apos;RADEXT&apos;;
		msg[&apos;ORC&apos;][&apos;ORC.18&apos;][&apos;ORC.18.1&apos;]=&apos;RADEXT&apos;;
		
		//creating NTE segment
		msg[&apos;NTE&apos;]
		msg[&apos;NTE&apos;][&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]
		msg[&apos;NTE&apos;][&apos;NTE.3&apos;][&apos;NTE.3.1&apos;]=&quot;RAD&quot;
		}	
}</string>
                </entry>
              </data>
            </step>
            <step>
              <sequenceNumber>1</sequenceNumber>
              <name>Patient class,Res</name>
              <script>var MSGTYP1=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString();
if (MSGTYP1==&quot;ORU&quot;)
{
	var patclassval=msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString();
	if(patclassval==&apos;OP&apos;)
	{
			msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]=&apos;O&apos;;
	}
	if(patclassval==&apos;IP&apos;)
	{
			msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]=&apos;I&apos;;
	}
	msg[&apos;OBR&apos;][&apos;OBR.16&apos;][&apos;OBR.16.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.32&apos;][&apos;OBR.32.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.33&apos;][&apos;OBR.33.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.33&apos;][&apos;OBR.33.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.34&apos;][&apos;OBR.34.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;]=&apos;&apos;;
	delete msg[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.2&apos;];
	msg[&apos;OBR&apos;][&apos;OBR.5&apos;][&apos;OBR.5.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.15&apos;][&apos;OBR.15.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.18&apos;][&apos;OBR.18.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.19&apos;][&apos;OBR.19.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.20&apos;][&apos;OBR.20.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.21&apos;][&apos;OBR.21.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.24&apos;][&apos;OBR.24.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.31&apos;][&apos;OBR.31.1&apos;]=&apos;&apos;;
}</script>
              <type>JavaScript</type>
              <data>
                <entry>
                  <string>Script</string>
                  <string>var MSGTYP1=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString();
if (MSGTYP1==&quot;ORU&quot;)
{
	var patclassval=msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString();
	if(patclassval==&apos;OP&apos;)
	{
			msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]=&apos;O&apos;;
	}
	if(patclassval==&apos;IP&apos;)
	{
			msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]=&apos;I&apos;;
	}
	msg[&apos;OBR&apos;][&apos;OBR.16&apos;][&apos;OBR.16.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.32&apos;][&apos;OBR.32.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.33&apos;][&apos;OBR.33.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.33&apos;][&apos;OBR.33.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.34&apos;][&apos;OBR.34.1&apos;]=&apos;85&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.2&apos;][&apos;OBR.2.1&apos;]=&apos;&apos;;
	delete msg[&apos;OBR&apos;][&apos;OBR.4&apos;][&apos;OBR.4.2&apos;];
	msg[&apos;OBR&apos;][&apos;OBR.5&apos;][&apos;OBR.5.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.15&apos;][&apos;OBR.15.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.18&apos;][&apos;OBR.18.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.19&apos;][&apos;OBR.19.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.20&apos;][&apos;OBR.20.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.21&apos;][&apos;OBR.21.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.24&apos;][&apos;OBR.24.1&apos;]=&apos;&apos;;
	msg[&apos;OBR&apos;][&apos;OBR.31&apos;][&apos;OBR.31.1&apos;]=&apos;&apos;;
}</string>
                </entry>
              </data>
            </step>
            <step>
              <sequenceNumber>2</sequenceNumber>
              <name>Handle Length of OBX segment</name>
              <script>if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() == &quot;RIS&quot;)
{
	var arr=&apos;&apos; // Varialble to store all OBX5.1s
	for (i=0;i&lt;msg[&apos;OBX&apos;].length();i++)
	{
		arr+=msg[&apos;OBX&apos;][i][&apos;OBX.5&apos;][&apos;OBX.5.1&apos;].toString()
	}
	var variablelength=arr.length // count of all the charaters
	delete msg[&apos;OBX&apos;];
	var l=1; // For indexing OBX segments
	var i=0; // i is used to slice up the variable which has all the OBX5.1s
	var m=0; // m is used to handle multiple OBX segments.
	createSegment(&apos;OBX&apos;)
	while(i&lt;variablelength)
	{
	msg[&apos;OBX&apos;][m]=l+&apos;|ST|||&apos;+arr.slice(i,i+200)+&apos;||||||F|&apos;;
	i=i+200
	l=l+1
	m=m+1
	}

}</script>
              <type>JavaScript</type>
              <data>
                <entry>
                  <string>Script</string>
                  <string>if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() == &quot;RIS&quot;)
{
	var arr=&apos;&apos; // Varialble to store all OBX5.1s
	for (i=0;i&lt;msg[&apos;OBX&apos;].length();i++)
	{
		arr+=msg[&apos;OBX&apos;][i][&apos;OBX.5&apos;][&apos;OBX.5.1&apos;].toString()
	}
	var variablelength=arr.length // count of all the charaters
	delete msg[&apos;OBX&apos;];
	var l=1; // For indexing OBX segments
	var i=0; // i is used to slice up the variable which has all the OBX5.1s
	var m=0; // m is used to handle multiple OBX segments.
	createSegment(&apos;OBX&apos;)
	while(i&lt;variablelength)
	{
	msg[&apos;OBX&apos;][m]=l+&apos;|ST|||&apos;+arr.slice(i,i+200)+&apos;||||||F|&apos;;
	i=i+200
	l=l+1
	m=m+1
	}

}</string>
                </entry>
              </data>
            </step>
          </steps>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8UklTfFJJU3xISVN8SElTfDIwMTkwMjEyMTcxMDI5fHxPUlVeUjAxfDIwMTkwMjEy
MTcxMDI5LjIyOTk0MjQwNzAyOTI5OXxQfDIuM3wxfHx8fHx8fApQSUR8MXx8U0hLSS0xNTA3MTgx
MjQ5NDk3fHxUaGVqdXMgQ2hhbmRyYW58fDI2LU1heS0xOTk1fEZ8fHx8fHx8fHx8fHx8fHx8fHx8
fHx8Ck9CUnwxfFJBRDkyfHw0NDc1Nl5YIFJBWSBBQkRPTUVOIEtVQnxST1VUSU5FfHx8fHx8fHx8
fHx8fHx8fHx8fENSfEZ8fHx8fHx8fHx8fDIwMTkwMjEyMTI0MTAwfHx8fHx8fHx8Ck9CWHx8VFh8
NDQ3NTZeWCBSQVkgQUJET01FTiBLVUJ8fFxYMERcXFgwQVxUaGlzIGlzIHRlc3QgUmVwb3J0XFgw
RFxcWDBBXFgtcmF5XFgwRFxcWDBBXFxYMERcXFgwQVxWaXN1YWxpemVkIGJvbmVzIHNob3cgbm9y
bWFsIGJvbmUgZGVuc2l0eS5cWDBEXFxYMEFcXFgwRFxcWDBBXE1pbGQgcmVkdWN0aW9uIGluIEw1
L1MxIGRpc2Mgc3BhY2Ugbm90ZWQuXFgwRFxcWDBBXFxYMERcXFgwQVxWaXN1YWxpemVkIGJvbmVz
IGFyZSBub3JtYWwgaW4gYWxpZ25tZW50LlxYMERcXFgwQVxcWDBEXFxYMEFcVGhlcmUgaXMgbm8g
ZXZpZGVuY2Ugb2Ygc3BvbmR5bG9seXNpcy9saXN0aGVzaXMuXFgwRFxcWDBBXFxYMERcXFgwQVxQ
b3N0ZXJpb3IgZWxlbWVudHMgYXBwZWFyIG5vcm1hbC5cWDBEXFxYMEFcXFgwRFxcWDBBXFByZSBh
bmQgcGFyYXZlcnRlYnJhbCBzb2Z0IHRpc3N1ZXMgYXJlIG5vcm1hbC5cWDBEXFxYMEFcXFgwRFxc
WDBBXE5vIGUvbyBmcmFjdHVyZS9seXRpYy9zY2xlcm90aWMgbGVzaW9uLlxYMERcXFgwQVxcWDBE
XFxYMEFcSW1wcmVzc2lvbiA6ICBcWDBEXFxYMEFcIFxYMERcXFgwQVxNaWxkIHJlZHVjdGlvbiBp
biBMNS9TMSBkaXNjIHNwYWNlIG5vdGVkID8gZGVnZW5lcmF0aXZlLlxYMERcXFgwQVxUaGlzIGlz
IHRlc3QgUmVwb3J0XFgwRFxcWDBBXFxYMERcXFgwQVxcWDBEXFxYMEFcXFgwRFxcWDBBXFxYMERc
XFgwQVxcWDBEXFxYMEFcXFgwRFxcWDBBXFxYMERcXFgwQVxcWDBEXFxYMEFcXFgwRFxcWDBBXFxY
MERcXFgwQVxcWDBEXFxYMEFcXFgwRFxcWDBBXFxYMERcXFgwQVxcWDBEXFxYMEFcXFgwRFxcWDBB
XFxYMERcXFgwQVxcWDBEXFxYMEFcfHx8fHx8Rnx8fDIwMTkwMjEyMTcxMDI1fHw4NV5Eci4gUkFE
SU9MT0dZfA==</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>Vista</name>
          <properties class="com.mirth.connect.connectors.tcp.TcpDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>true</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
              <pluginPointName>MLLP</pluginPointName>
              <startOfMessageBytes>0B</startOfMessageBytes>
              <endOfMessageBytes>1C0D</endOfMessageBytes>
              <useMLLPv2>false</useMLLPv2>
              <ackBytes>06</ackBytes>
              <nackBytes>15</nackBytes>
              <maxRetries>2</maxRetries>
            </transmissionModeProperties>
            <remoteAddress>127.0.0.1</remoteAddress>
            <remotePort>9706</remotePort>
            <overrideLocalBinding>false</overrideLocalBinding>
            <localAddress>0.0.0.0</localAddress>
            <localPort>0</localPort>
            <sendTimeout>5000</sendTimeout>
            <bufferSize>65536</bufferSize>
            <keepConnectionOpen>false</keepConnectionOpen>
            <checkRemoteHost>false</checkRemoteHost>
            <responseTimeout>5000</responseTimeout>
            <ignoreResponse>false</ignoreResponse>
            <queueOnResponseTimeout>true</queueOnResponseTimeout>
            <dataTypeBinary>false</dataTypeBinary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8UEFDU19BUFB8UEFDU19GQUNJTElUWXxISVNfQVBQfEhJU19GQUNJTElUWXwyMDEz
MDYxNDExMTM0NXx8T1JVXlIwMXxNc2dDdHJsSWRfT1JVfFB8Mi4zfDF8fHx8fHx8ClBJRHwxfHxv
aHVtSS0xNDAxMTkxMDIyMDg4fHxQYXRpZW50Xk5hbWV8fDIwMDAwNTE0fEZ8fHx8fHx8fHx8QWRt
SUR8fHx8fHx8fHx8fHwKUFYxfDF8T1B8fHx8fHxeUmVmIFBoeXx8fHx8fHx8fHx8fDUwfHx8fHx8
fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHwKT1JDfE5XfHx8fHx8fHx8fHxeUmVxIFBoeXx8fHx8
Xkluc3RpdHV0aW9uIE5hbWV8fHx8fHx8Ck9CUnwxfEFDQy5OTy4wMXx8U1BTSUReU1BTRGVzY3xS
T1VUSU5FfHx8fHx8fHx8fFJQRGVzY3x8fFNTTmFtZXxSUElEfFNQU0xvY2F0aW9ufFNTQUVUaXRs
ZXx8fENUfHx8fHx8fFJlYXNvbiBGb3IgUHJvY3x8fFNjaFBlclBoeU5hbWV8fDIwMTMwNjE0MTMy
MDMwfHx8fHx8fHx8Ck9CWHx8VFh8U3R1ZHlJRF5TdHVkeURlc2NyaXB0aW9ufHxUaGlzIGlzIHNh
bXBsZSByZXBvcnQgZm9yIGFjY2Vzc2lvbiBudW1iZXIgQUNDLk5PLjAxLlxYMERcXFgwQVxUaGlz
IGlzIHNhbXBsZSByZXBvcnQgb25seS5cWDBEXFxYMEFcfHx8fHx8Rnx8fDIwMTMwNjE0MTExMzE3
fHxSZWFkIFBoeSBJRF5SZWFkIFBoeXw=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>TCP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Docit</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>org.postgresql.Driver</driver>
            <url>jdbc:postgresql://10.10.5.31:5432/docit_qa_oav</url>
            <username>oav_admin</username>
            <password>oav@112233#</password>
            <query>insert into T_InboundHIS (UnitID,Msg,MsgControlID,MsgType,Priority,RetryCount,AddedDateTime,Status,PatientID,PatientUnitID) Values (1,${message.encodedData}, CAST(${number1} as bigint),${MsgType},0,0,CAST(${CreateDate} as timestamp),0,${PatientID},1)</query>
            <useScript>false</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>Msg Control id</name>
                <script>var dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;org.postgresql.Driver&apos;,&apos;jdbc:postgresql://10.10.5.31:5432/docit_qa_oav&apos;,&apos;oav_admin&apos;,&apos;oav@112233#&apos;);
logger.info(&apos;DB connected&apos;);
var SQLQuery = &quot;select max(msgid)+1 as number1 FROM T_inboundHIS ;&quot;;
logger.info(&apos;SQLQuery=&apos; + SQLQuery);
var results = dbConn.executeCachedQuery(SQLQuery);
while(results.next())
{
	var number1 = results.getString(&apos;number1&apos;);
}
dbConn.close();
logger.info(&apos;number=&apos; + number1);
channelMap.put(&apos;number1&apos;,number1);
$c(&quot;number1&quot;,number1);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;org.postgresql.Driver&apos;,&apos;jdbc:postgresql://10.10.5.31:5432/docit_qa_oav&apos;,&apos;oav_admin&apos;,&apos;oav@112233#&apos;);
logger.info(&apos;DB connected&apos;);
var SQLQuery = &quot;select max(msgid)+1 as number1 FROM T_inboundHIS ;&quot;;
logger.info(&apos;SQLQuery=&apos; + SQLQuery);
var results = dbConn.executeCachedQuery(SQLQuery);
while(results.next())
{
	var number1 = results.getString(&apos;number1&apos;);
}
dbConn.close();
logger.info(&apos;number=&apos; + number1);
channelMap.put(&apos;number1&apos;,number1);
$c(&quot;number1&quot;,number1);</string>
                  </entry>
                </data>
              </step>
              <step>
                <sequenceNumber>1</sequenceNumber>
                <name>map variable to insert in docit</name>
                <script>var mcode=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString();
var tevent=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString();
var msgtyp=mcode+&apos;^&apos;+tevent;
msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]=$(&apos;number1&apos;);
channelMap.put(&quot;PatientID&quot;,msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString())
channelMap.put(&quot;MsgType&quot;,msgtyp)
channelMap.put(&quot;CreateDate&quot;,formatV2HDate(msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString()))
//channelMap.put(&quot;MsgCID&quot;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString())
//channelMap.put(&quot;MsgID&quot;,connectorMessage.getMessageId())
//var number=DateUtil.getCurrentDate(&apos;yyyyMMddHHmmssSSSS&apos;);
//channelMap.put(&quot;MsgCID&quot;,number)
/**
insert into T_InboundHIS (
	UnitID,
	Msg,
	MsgControlID,
	MsgType,
	Priority,
	RetryCount,
	AddedDateTime,
	Status,
	PatientID,
	PatientUnitID) 
	Values (1,${message.rawData}, 
	CAST(${MsgCID} as bigint),${MsgType},0,0,CAST(${CreateDate} as timestamp),0,${PatientID},1)

	*/</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var mcode=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString();
var tevent=msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString();
var msgtyp=mcode+&apos;^&apos;+tevent;
msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]=$(&apos;number1&apos;);
channelMap.put(&quot;PatientID&quot;,msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString())
channelMap.put(&quot;MsgType&quot;,msgtyp)
channelMap.put(&quot;CreateDate&quot;,formatV2HDate(msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString()))
//channelMap.put(&quot;MsgCID&quot;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString())
//channelMap.put(&quot;MsgID&quot;,connectorMessage.getMessageId())
//var number=DateUtil.getCurrentDate(&apos;yyyyMMddHHmmssSSSS&apos;);
//channelMap.put(&quot;MsgCID&quot;,number)
/**
insert into T_InboundHIS (
	UnitID,
	Msg,
	MsgControlID,
	MsgType,
	Priority,
	RetryCount,
	AddedDateTime,
	Status,
	PatientID,
	PatientUnitID) 
	Values (1,${message.rawData}, 
	CAST(${MsgCID} as bigint),${MsgType},0,0,CAST(${CreateDate} as timestamp),0,${PatientID},1)

	*/</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8UklTIFIwMXxSSVN8VklTVEEgUjAxfEhJU3wyMDE5MDIxMjE3MTAyOXx8T1JVXlIw
MXwyMDE5MDIxMjE3MTAyOS4yMjk5NDI0MDcwMjkyOTl8UHwyLjV8MXx8QUx8TkV8SU5EfHx8DVBJ
RHwxfHxTSEtJLTExMTExMTExMTExfHxwYXRpZW50IG5hbWV8fDI2LU1heS0xOTk1fEZ8fHx8fHx8
fHx8fHx8fHx8fHx8fHx8DU9CUnwxfHxSQUQ5Mnw0NDc1Nnx8fDIwMTkwMjEyMTI0MTAwfDIwMTkw
MjEyMTI0MTAwfHx8fHx8fHx8fHx8fHwyMDE5MDIxMjEyNDEwMHx8fEZ8fHx8fHx8ODV8ODV8ODV8
fDIwMTkwMjEyMTI0MTAwfHx8fHx8fHx8DU9SQ3xSRXxSQUQ5Mnx8fENPTVBMRVRFRHxOfHx8fDg1
fDg1fDg1fHx8fHx8UkFERVhUDU5URXx8fFJBRA1PQlh8MXxTVHx8fFxYMERcXFgwQVxUaGlzIGlz
IHRlc3QgUmVwb3J0XFgwRFxcWDBBXFgtcmF5XFgwRFxcWDBBXFxYMERcXFgwQVxWaXN1YWxpemVk
IGJvbmVzIHNob3cgbm9ybWFsIGJvbmUgZGVuc2l0eS5cWDBEXFxYMEFcXFgwRFxcWDBBXE1pbGQg
cmVkdWN0aW9uIGluIEw1L1MxIGRpc2Mgc3BhY2Ugbm90ZWQuXFgwRFxcWDBBXFxYMERcXFgwQVxW
aXN1YWxpemVkIGJvfHx8fHx8RnwN</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries>
        <codeTemplateLibrary version="3.4.2">
          <id>3b402060-1297-470c-bcb4-716d35eac750</id>
          <name>Library 1</name>
          <revision>12</revision>
          <lastModified>
            <time>1550124543311</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>0930707b-8ac9-4517-a731-8a88ecc1b5e4</string>
            <string>e3330f6d-f0eb-4bb8-903a-4aca422f1d37</string>
            <string>d5c4d42b-44b1-437d-a958-d0497cb227e3</string>
            <string>9d6f470e-9960-4ab2-a46f-07781e50659d</string>
            <string>94085157-241f-4100-814c-f8284d4ea014</string>
            <string>b13e8580-74b4-4284-b010-0cd936b9b1d8</string>
            <string>98eb8d3f-2777-4ab4-ba1c-f9a88c3f083d</string>
            <string>93ec97d8-aed5-43cd-b455-3df4568e05a7</string>
            <string>883c9458-66cd-4ff3-a09e-cc473a6e4c61</string>
            <string>232e1f16-29db-494b-9344-7280249bb9b6</string>
            <string>105076f4-125e-4493-9b84-91103a637bff</string>
            <string>53589a71-2f65-44a2-ba2d-af4d2046a461</string>
            <string>d617b9e0-b2c3-46da-9bcd-618aba628f97</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>f9bc433c-9bb4-4738-b9b0-bf97b34debf5</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>7c397de3-59d6-414a-9814-024ed7a3310f</string>
            <string>637f1ed7-efaa-4a54-91f6-4238379bfceb</string>
            <string>4ecd041f-73af-423e-ad46-2619602b4a78</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>6ce16191-36c0-4880-8497-377a83aa3082</string>
            <string>1666255f-4e27-4cdf-b182-009267a86bb4</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>eeed1b0b-b1ed-4ab2-a1d1-13eb549f7bbe</string>
            <string>41f93ad4-ecc1-4b38-9ddd-e75f952e682a</string>
            <string>839df7ae-3898-40c8-9319-c91a80739433</string>
            <string>eab9cf10-c82e-46ee-abc7-1b59016f098a</string>
            <string>7ff46f90-1d0b-4524-b4c1-bb7ee34558c5</string>
            <string>fbbb34e7-028d-4b6f-8d50-e76913cdb1f1</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>1fd7370d-da00-4a5e-9404-d78d7214bcda</string>
            <string>c0741da3-afa9-4d76-b7a5-8eedd8066225</string>
            <string>d7f029cb-7fe4-4e46-917c-919aca3a079c</string>
            <string>ddcd1526-8070-402e-bb5f-2091635bc9e1</string>
            <string>9eb3a4b4-464a-4888-81fe-47f60690f8ea</string>
            <string>5d8a378c-f55a-471b-a90c-ca1c8a3cef5a</string>
            <string>2b4ad534-3043-4980-bf15-e2334b696503</string>
            <string>0c9c3346-195b-4c3e-8833-666c8fffa0b0</string>
            <string>d9d49577-9e22-4841-8d40-53354126e6bc</string>
            <string>10d97a0b-c021-4529-8323-1cdf5cb16759</string>
            <string>f2358521-3965-45d8-b10e-75f9fbab3134</string>
            <string>01daa3a3-4329-4ea0-98a7-2f05a2a344b2</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>66b55822-506d-4afe-a196-fb65f1db91d4</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>1677d4fb-8fbb-4d11-b246-8a5584280617</string>
            <string>260287bc-1bc6-4b4e-a382-98b51f11a74c</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>812ce55e-14c7-46d9-beeb-e746ce630183</string>
            <string>1c838bb0-8bb2-4a56-aa79-d2116d0100ea</string>
            <string>65d70067-6b01-4af7-bdf1-af4f242c55d2</string>
            <string>bf03e255-0058-4ec9-851d-61c875751ee1</string>
            <string>d8842088-989b-4e6c-89cb-79441471a4a6</string>
            <string>f91cfe88-1171-4296-b377-518def435067</string>
            <string>7472d142-7885-4677-ba13-c7203db6988c</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>9ff78e04-94a8-4373-90b2-db2a28003081</string>
            <string>79eb47bd-c499-4339-b378-4337eed28536</string>
            <string>d4e79d61-51b2-4446-9d02-48fcf6392651</string>
            <string>0fab424d-56ff-44db-afbe-114869361d13</string>
            <string>e82c928b-33bd-4fb3-9a99-0d851adaa82f</string>
            <string>da3848ba-1da8-4401-9916-b7cda474cbbc</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>10b3d862-4394-498e-b9d5-870037691a8c</string>
            <string>0a3b7e51-be83-466a-add5-6400c45aa8b2</string>
            <string>5a5f6536-66e8-42cf-b9aa-d502a2c3b414</string>
            <string>51ae3581-e3eb-4746-b634-5912a6edaade</string>
            <string>ca3a0496-a538-4df1-b7b5-29165d27227a</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>5638c05f-5afa-467c-8c45-140c60dd8fca</string>
            <string>860a9df1-92e3-4131-86f0-f25201fbb683</string>
            <string>40128672-2ba8-4dc3-8faa-c3b09dbcc8a5</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>35a52068-12f3-4c8d-97b8-e51676a21c13</string>
            <string>98a69b54-8eb6-4a11-a45c-b94b50f16671</string>
            <string>5177210a-55a7-46d8-b632-d2469131f5a9</string>
            <string>0eb149da-4b38-416a-9a9a-59adf19fa664</string>
            <string>159574a3-4d34-4a79-9884-bea5dc42ebe7</string>
            <string>ba9c26c5-0fa8-4ff6-bc54-513cdf570733</string>
            <string>63af1bb3-d1e9-4e77-b358-645d7b4351d5</string>
            <string>c41317dd-1d69-44c8-b1fb-4eabae5b20bc</string>
            <string>31c94c2a-9d00-440b-aadf-b7b1bb7d4bc7</string>
            <string>b07e26af-668b-464b-bd83-e6ba73895a66</string>
            <string>58275a8e-d406-42a4-a81b-64214ea10d17</string>
            <string>ed69ab1e-d270-4414-8061-e869365eb7a9</string>
            <string>f6084ffe-b7f8-437f-b159-57bf2639ac47</string>
            <string>d43231bc-4e28-4da7-98d4-1ce2e84e4a89</string>
            <string>a466faf4-a6ed-4efb-b6da-131309ae7c60</string>
            <string>36324d8e-0936-44bb-9728-fd2b73e167fc</string>
            <string>0189af55-85ad-4bdc-94e7-7cc2ebf5a397</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>160ed5a9-cf99-447b-b1ad-9243f2d73d16</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>2bb13ab0-9c7a-453e-a086-3cfacb9139e6</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347472</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a10e956f-24d7-4dc0-8881-874d638f66fa</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347365</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>138de25a-39db-4929-824e-7e47fc5fb581</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347626</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5de22490-ea08-42c6-b843-e3e347ba51c5</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347769</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>53f0b1a0-17b1-480f-8a6e-6253dc6e2a55</id>
              <name>Template 1</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347708</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function new_function1(arg1) {
	// TODO: Enter code here
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1d28e258-01c7-468b-a464-fbe37771160d</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347549</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
        <codeTemplateLibrary version="3.4.2">
          <id>f6441cbe-8e2f-42a4-bccc-a9c7ed446807</id>
          <name>Library 2</name>
          <revision>16</revision>
          <lastModified>
            <time>1550124543279</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>92743ae8-a745-455c-a433-b23c84ba8614</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>a6ab0cce-4c40-41b3-9306-4d0fbe2e7042</string>
            <string>fe3b2587-55e6-4827-92c2-2c51c588b8b0</string>
            <string>5f7a5987-9eb0-40c6-b9b7-d531c4e63372</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>39c1b8a0-11c3-435f-ba69-9d6c825c7890</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>d4a71fdf-ac13-4843-ae25-a5a2b56f0d90</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>53374354-f1c8-4040-b73a-8257be2b4cf7</string>
            <string>1fdac583-e991-48f1-9562-879950f47c19</string>
            <string>6f1a24e4-7df9-4741-b109-da2b6df00891</string>
            <string>c491713e-cdc5-4b51-9b73-3a44d110381b</string>
            <string>2ed3ff90-9e18-48a8-bf89-fea0b2217a79</string>
            <string>4f562f51-3462-458b-a24c-b2dbbf31140f</string>
            <string>c8adc3f3-024b-48c9-bed9-2b57a2a7f8e5</string>
            <string>1d18266b-a871-49f5-83c8-0d999a4b416d</string>
            <string>52528a47-ea6c-4700-8c03-7c936c23a5bb</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>eb1e2ac4-de08-45e9-8caf-d5e2e94e0780</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>a38a2b7e-05c7-47c5-ac70-845b8912c035</string>
            <string>d0a09853-846d-4622-8917-28ff3ecb27fd</string>
            <string>0db5a28e-6af5-4fe8-82ef-12b9cbd17b4f</string>
            <string>b6f158b2-805c-40b0-8115-6bc00d960590</string>
            <string>fdbe8417-6d73-47ce-b363-c6b95b259a13</string>
            <string>d4abc7f8-0b1d-48f1-a59f-f8d46fe6c802</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>89c0b661-15ee-4998-b66b-d225aa4f9de9</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>e84f2fe6-bcb8-4570-8161-45d30acb65e6</string>
            <string>e17d0add-34c7-4528-b7dd-86489bc7095f</string>
            <string>02cb5f6f-5483-48c9-b897-b132a5da3fb8</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>8b6b203b-70de-4160-b160-e11fa0d4c050</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>52676843-ba2e-4109-9daf-21ca5ada681f</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500785</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>77732e63-d702-4364-b827-58943bce53b9</id>
              <name>GetCurrentHL7DateTime1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068540</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>59f8d35e-8b5a-409b-b1b9-73f14b70ad63</id>
              <name>GetCurrentHL7DateTime11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373417</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e3be9605-1812-4317-99da-29d695938639</id>
              <name>GetCurrentHL7DateTime22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414216</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5662cfc5-0796-4252-b5d4-4853a0c02ed4</id>
              <name>GetCurrentHL7DateTime33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445319</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6bf95548-a7fe-451d-80fe-7841b982a2db</id>
              <name>GetCurrentHL7DateTime4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167552</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f4a50b68-d6a3-47b8-a816-73a98fba68c4</id>
              <name>GetCurrentHL7DateTime44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492803</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa4737d6-53d5-4669-95de-341034e2d039</id>
              <name>GetCurrentHL7DateTime5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207700</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a000d1b4-41e2-4fec-ad81-d84f5c4b57bb</id>
              <name>GetCurrentHL7DateTime6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252760</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>67dc77cd-2244-4ec4-a2f4-eec92e070bc8</id>
              <name>GetCurrentHL7DateTime8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292611</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>b3e0d5ae-46e9-4e68-a1ae-5e36fbed19a6</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500922</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5259eb99-ebc0-40c7-989a-c9728e88e277</id>
              <name>MirthAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068651</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f99b26dd-995a-49f9-aa8f-9167cf152877</id>
              <name>MirthAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373537</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>56397ac3-9f19-4037-8101-39d2ad868e64</id>
              <name>MirthAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414295</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb5e5f27-78f2-4081-8c38-16bff17f27f1</id>
              <name>MirthAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445132</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1b3e0a18-4e94-4a1e-b49b-06282c70e434</id>
              <name>MirthAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167501</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>20a831b4-3302-4283-8eff-cc4bd4a9f08f</id>
              <name>MirthAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492663</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>cdaea5c8-2275-4527-a9d8-b940946451b7</id>
              <name>MirthAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207619</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb89b7ef-8f97-432b-8884-84ef41e05d1f</id>
              <name>MirthAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252807</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e15de9b1-90db-4c8e-b221-6b52431bd229</id>
              <name>MirthAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292657</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dc6a8f19-863e-4903-a666-8cd4b3df2e51</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500973</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a34cb3da-1e3b-4ed5-825f-0427a82470c0</id>
              <name>MirthRcvdCounterAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068615</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>9191af67-946d-4c64-a90e-b0a935006f39</id>
              <name>MirthRcvdCounterAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373488</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>4435d576-3adb-4e14-9063-1a1cd7e838f4</id>
              <name>MirthRcvdCounterAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414114</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8562a117-29de-4993-b6c5-a70d3e9fa668</id>
              <name>MirthRcvdCounterAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445262</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>68652dfa-a24e-43f2-93d9-2777c073cea1</id>
              <name>MirthRcvdCounterAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167603</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>28b31fa8-4d8d-4b86-9e1a-80585f537daf</id>
              <name>MirthRcvdCounterAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492744</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>517b8c85-9da8-43ef-933c-5e7fbb2c474a</id>
              <name>MirthRcvdCounterAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207514</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>961e3e8f-e9fe-438e-8afe-80f1a0954293</id>
              <name>MirthRcvdCounterAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252585</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>51f63c31-fedb-4000-8207-0bec5113049c</id>
              <name>MirthRcvdCounterAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>845dde36-a2af-4f89-a3cf-5795ca7dc227</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500881</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1332f400-ff2b-41d9-9ac1-f2ad98afccb7</id>
              <name>MirthRcvdCounterAlertsFunctionForACK1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068499</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8e414428-22a1-458d-a437-54b870a33a05</id>
              <name>MirthRcvdCounterAlertsFunctionForACK11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373368</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>35bb346d-6d7e-4f86-9897-83950165d404</id>
              <name>MirthRcvdCounterAlertsFunctionForACK22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414352</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ff392f84-6cc6-4774-894c-b65583341e8d</id>
              <name>MirthRcvdCounterAlertsFunctionForACK33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445207</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa9566b3-52a9-4b8d-9e4a-966d65d5e437</id>
              <name>MirthRcvdCounterAlertsFunctionForACK4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>956b1ddb-c1a3-4f2f-8fd8-766ac544998a</id>
              <name>MirthRcvdCounterAlertsFunctionForACK44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492606</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dffc8508-f86b-470e-9be1-a3c20a43b370</id>
              <name>MirthRcvdCounterAlertsFunctionForACK5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207556</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6ae4f0c5-fd99-408d-b028-28a82e1679d2</id>
              <name>MirthRcvdCounterAlertsFunctionForACK6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252640</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a9c44ad3-a410-4f60-95f5-9a4023efd36c</id>
              <name>MirthRcvdCounterAlertsFunctionForACK8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292546</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>2811c681-f8f9-418e-a3d8-444f73bf393a</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500818</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bd954cbb-7f03-412d-a940-e32a8a11a7d1</id>
              <name>V2H Date Change1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068576</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a221937e-860e-4361-afc9-b0f2222fdaa2</id>
              <name>V2H Date Change11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373592</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>01977bc4-41b0-4721-9e08-8b896fda7ca5</id>
              <name>V2H Date Change22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414161</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5110ca7a-956f-46ac-b850-8b56e32a323e</id>
              <name>V2H Date Change33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445389</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e2236300-3000-4109-b0ad-9c2c89c1b06c</id>
              <name>V2H Date Change4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167673</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5c5fb4be-a443-4871-8af9-039fd42b08aa</id>
              <name>V2H Date Change44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492867</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a7734218-419b-4fe7-9032-5832398fe1e0</id>
              <name>V2H Date Change5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207661</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>d7989778-c82d-4f70-bd89-cce46fd40eb3</id>
              <name>V2H Date Change6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252696</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ad673099-8976-4470-93e7-c15be699ccda</id>
              <name>V2H Date Change8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292484</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
      </codeTemplateLibraries>
    </channel>
    <channel version="3.4.2">
      <id>42726867-5469-4070-8aeb-b2ed3a1f060b</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>SEND_RAD_VISTA_ACK_TO_RIS</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1549976807603</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <revision>2</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>127.0.0.1</host>
            <port>3007</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress></responseAddress>
          <responsePort></responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>Destination 1</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.encodedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries>
        <codeTemplateLibrary version="3.4.2">
          <id>3b402060-1297-470c-bcb4-716d35eac750</id>
          <name>Library 1</name>
          <revision>12</revision>
          <lastModified>
            <time>1550124543311</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>0930707b-8ac9-4517-a731-8a88ecc1b5e4</string>
            <string>e3330f6d-f0eb-4bb8-903a-4aca422f1d37</string>
            <string>d5c4d42b-44b1-437d-a958-d0497cb227e3</string>
            <string>9d6f470e-9960-4ab2-a46f-07781e50659d</string>
            <string>94085157-241f-4100-814c-f8284d4ea014</string>
            <string>b13e8580-74b4-4284-b010-0cd936b9b1d8</string>
            <string>98eb8d3f-2777-4ab4-ba1c-f9a88c3f083d</string>
            <string>93ec97d8-aed5-43cd-b455-3df4568e05a7</string>
            <string>883c9458-66cd-4ff3-a09e-cc473a6e4c61</string>
            <string>232e1f16-29db-494b-9344-7280249bb9b6</string>
            <string>105076f4-125e-4493-9b84-91103a637bff</string>
            <string>53589a71-2f65-44a2-ba2d-af4d2046a461</string>
            <string>d617b9e0-b2c3-46da-9bcd-618aba628f97</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>f9bc433c-9bb4-4738-b9b0-bf97b34debf5</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>7c397de3-59d6-414a-9814-024ed7a3310f</string>
            <string>637f1ed7-efaa-4a54-91f6-4238379bfceb</string>
            <string>4ecd041f-73af-423e-ad46-2619602b4a78</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>6ce16191-36c0-4880-8497-377a83aa3082</string>
            <string>1666255f-4e27-4cdf-b182-009267a86bb4</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>eeed1b0b-b1ed-4ab2-a1d1-13eb549f7bbe</string>
            <string>41f93ad4-ecc1-4b38-9ddd-e75f952e682a</string>
            <string>839df7ae-3898-40c8-9319-c91a80739433</string>
            <string>eab9cf10-c82e-46ee-abc7-1b59016f098a</string>
            <string>7ff46f90-1d0b-4524-b4c1-bb7ee34558c5</string>
            <string>fbbb34e7-028d-4b6f-8d50-e76913cdb1f1</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>1fd7370d-da00-4a5e-9404-d78d7214bcda</string>
            <string>c0741da3-afa9-4d76-b7a5-8eedd8066225</string>
            <string>d7f029cb-7fe4-4e46-917c-919aca3a079c</string>
            <string>ddcd1526-8070-402e-bb5f-2091635bc9e1</string>
            <string>9eb3a4b4-464a-4888-81fe-47f60690f8ea</string>
            <string>5d8a378c-f55a-471b-a90c-ca1c8a3cef5a</string>
            <string>2b4ad534-3043-4980-bf15-e2334b696503</string>
            <string>0c9c3346-195b-4c3e-8833-666c8fffa0b0</string>
            <string>d9d49577-9e22-4841-8d40-53354126e6bc</string>
            <string>10d97a0b-c021-4529-8323-1cdf5cb16759</string>
            <string>f2358521-3965-45d8-b10e-75f9fbab3134</string>
            <string>01daa3a3-4329-4ea0-98a7-2f05a2a344b2</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>66b55822-506d-4afe-a196-fb65f1db91d4</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>1677d4fb-8fbb-4d11-b246-8a5584280617</string>
            <string>260287bc-1bc6-4b4e-a382-98b51f11a74c</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>812ce55e-14c7-46d9-beeb-e746ce630183</string>
            <string>1c838bb0-8bb2-4a56-aa79-d2116d0100ea</string>
            <string>65d70067-6b01-4af7-bdf1-af4f242c55d2</string>
            <string>bf03e255-0058-4ec9-851d-61c875751ee1</string>
            <string>d8842088-989b-4e6c-89cb-79441471a4a6</string>
            <string>f91cfe88-1171-4296-b377-518def435067</string>
            <string>7472d142-7885-4677-ba13-c7203db6988c</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>9ff78e04-94a8-4373-90b2-db2a28003081</string>
            <string>79eb47bd-c499-4339-b378-4337eed28536</string>
            <string>d4e79d61-51b2-4446-9d02-48fcf6392651</string>
            <string>0fab424d-56ff-44db-afbe-114869361d13</string>
            <string>e82c928b-33bd-4fb3-9a99-0d851adaa82f</string>
            <string>da3848ba-1da8-4401-9916-b7cda474cbbc</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>10b3d862-4394-498e-b9d5-870037691a8c</string>
            <string>0a3b7e51-be83-466a-add5-6400c45aa8b2</string>
            <string>5a5f6536-66e8-42cf-b9aa-d502a2c3b414</string>
            <string>51ae3581-e3eb-4746-b634-5912a6edaade</string>
            <string>ca3a0496-a538-4df1-b7b5-29165d27227a</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>5638c05f-5afa-467c-8c45-140c60dd8fca</string>
            <string>860a9df1-92e3-4131-86f0-f25201fbb683</string>
            <string>40128672-2ba8-4dc3-8faa-c3b09dbcc8a5</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>35a52068-12f3-4c8d-97b8-e51676a21c13</string>
            <string>98a69b54-8eb6-4a11-a45c-b94b50f16671</string>
            <string>5177210a-55a7-46d8-b632-d2469131f5a9</string>
            <string>0eb149da-4b38-416a-9a9a-59adf19fa664</string>
            <string>159574a3-4d34-4a79-9884-bea5dc42ebe7</string>
            <string>ba9c26c5-0fa8-4ff6-bc54-513cdf570733</string>
            <string>63af1bb3-d1e9-4e77-b358-645d7b4351d5</string>
            <string>c41317dd-1d69-44c8-b1fb-4eabae5b20bc</string>
            <string>31c94c2a-9d00-440b-aadf-b7b1bb7d4bc7</string>
            <string>b07e26af-668b-464b-bd83-e6ba73895a66</string>
            <string>58275a8e-d406-42a4-a81b-64214ea10d17</string>
            <string>ed69ab1e-d270-4414-8061-e869365eb7a9</string>
            <string>f6084ffe-b7f8-437f-b159-57bf2639ac47</string>
            <string>d43231bc-4e28-4da7-98d4-1ce2e84e4a89</string>
            <string>a466faf4-a6ed-4efb-b6da-131309ae7c60</string>
            <string>36324d8e-0936-44bb-9728-fd2b73e167fc</string>
            <string>0189af55-85ad-4bdc-94e7-7cc2ebf5a397</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>160ed5a9-cf99-447b-b1ad-9243f2d73d16</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>2bb13ab0-9c7a-453e-a086-3cfacb9139e6</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347472</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a10e956f-24d7-4dc0-8881-874d638f66fa</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347365</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>138de25a-39db-4929-824e-7e47fc5fb581</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347626</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5de22490-ea08-42c6-b843-e3e347ba51c5</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347769</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>53f0b1a0-17b1-480f-8a6e-6253dc6e2a55</id>
              <name>Template 1</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347708</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function new_function1(arg1) {
	// TODO: Enter code here
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1d28e258-01c7-468b-a464-fbe37771160d</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347549</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
        <codeTemplateLibrary version="3.4.2">
          <id>f6441cbe-8e2f-42a4-bccc-a9c7ed446807</id>
          <name>Library 2</name>
          <revision>16</revision>
          <lastModified>
            <time>1550124543279</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>92743ae8-a745-455c-a433-b23c84ba8614</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>a6ab0cce-4c40-41b3-9306-4d0fbe2e7042</string>
            <string>fe3b2587-55e6-4827-92c2-2c51c588b8b0</string>
            <string>5f7a5987-9eb0-40c6-b9b7-d531c4e63372</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>39c1b8a0-11c3-435f-ba69-9d6c825c7890</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>d4a71fdf-ac13-4843-ae25-a5a2b56f0d90</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>53374354-f1c8-4040-b73a-8257be2b4cf7</string>
            <string>1fdac583-e991-48f1-9562-879950f47c19</string>
            <string>6f1a24e4-7df9-4741-b109-da2b6df00891</string>
            <string>c491713e-cdc5-4b51-9b73-3a44d110381b</string>
            <string>2ed3ff90-9e18-48a8-bf89-fea0b2217a79</string>
            <string>4f562f51-3462-458b-a24c-b2dbbf31140f</string>
            <string>c8adc3f3-024b-48c9-bed9-2b57a2a7f8e5</string>
            <string>1d18266b-a871-49f5-83c8-0d999a4b416d</string>
            <string>52528a47-ea6c-4700-8c03-7c936c23a5bb</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>eb1e2ac4-de08-45e9-8caf-d5e2e94e0780</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>a38a2b7e-05c7-47c5-ac70-845b8912c035</string>
            <string>d0a09853-846d-4622-8917-28ff3ecb27fd</string>
            <string>0db5a28e-6af5-4fe8-82ef-12b9cbd17b4f</string>
            <string>b6f158b2-805c-40b0-8115-6bc00d960590</string>
            <string>fdbe8417-6d73-47ce-b363-c6b95b259a13</string>
            <string>d4abc7f8-0b1d-48f1-a59f-f8d46fe6c802</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>89c0b661-15ee-4998-b66b-d225aa4f9de9</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>e84f2fe6-bcb8-4570-8161-45d30acb65e6</string>
            <string>e17d0add-34c7-4528-b7dd-86489bc7095f</string>
            <string>02cb5f6f-5483-48c9-b897-b132a5da3fb8</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>8b6b203b-70de-4160-b160-e11fa0d4c050</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>52676843-ba2e-4109-9daf-21ca5ada681f</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500785</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>77732e63-d702-4364-b827-58943bce53b9</id>
              <name>GetCurrentHL7DateTime1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068540</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>59f8d35e-8b5a-409b-b1b9-73f14b70ad63</id>
              <name>GetCurrentHL7DateTime11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373417</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e3be9605-1812-4317-99da-29d695938639</id>
              <name>GetCurrentHL7DateTime22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414216</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5662cfc5-0796-4252-b5d4-4853a0c02ed4</id>
              <name>GetCurrentHL7DateTime33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445319</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6bf95548-a7fe-451d-80fe-7841b982a2db</id>
              <name>GetCurrentHL7DateTime4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167552</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f4a50b68-d6a3-47b8-a816-73a98fba68c4</id>
              <name>GetCurrentHL7DateTime44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492803</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa4737d6-53d5-4669-95de-341034e2d039</id>
              <name>GetCurrentHL7DateTime5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207700</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a000d1b4-41e2-4fec-ad81-d84f5c4b57bb</id>
              <name>GetCurrentHL7DateTime6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252760</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>67dc77cd-2244-4ec4-a2f4-eec92e070bc8</id>
              <name>GetCurrentHL7DateTime8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292611</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>b3e0d5ae-46e9-4e68-a1ae-5e36fbed19a6</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500922</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5259eb99-ebc0-40c7-989a-c9728e88e277</id>
              <name>MirthAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068651</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f99b26dd-995a-49f9-aa8f-9167cf152877</id>
              <name>MirthAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373537</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>56397ac3-9f19-4037-8101-39d2ad868e64</id>
              <name>MirthAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414295</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb5e5f27-78f2-4081-8c38-16bff17f27f1</id>
              <name>MirthAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445132</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1b3e0a18-4e94-4a1e-b49b-06282c70e434</id>
              <name>MirthAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167501</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>20a831b4-3302-4283-8eff-cc4bd4a9f08f</id>
              <name>MirthAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492663</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>cdaea5c8-2275-4527-a9d8-b940946451b7</id>
              <name>MirthAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207619</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb89b7ef-8f97-432b-8884-84ef41e05d1f</id>
              <name>MirthAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252807</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e15de9b1-90db-4c8e-b221-6b52431bd229</id>
              <name>MirthAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292657</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dc6a8f19-863e-4903-a666-8cd4b3df2e51</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500973</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a34cb3da-1e3b-4ed5-825f-0427a82470c0</id>
              <name>MirthRcvdCounterAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068615</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>9191af67-946d-4c64-a90e-b0a935006f39</id>
              <name>MirthRcvdCounterAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373488</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>4435d576-3adb-4e14-9063-1a1cd7e838f4</id>
              <name>MirthRcvdCounterAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414114</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8562a117-29de-4993-b6c5-a70d3e9fa668</id>
              <name>MirthRcvdCounterAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445262</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>68652dfa-a24e-43f2-93d9-2777c073cea1</id>
              <name>MirthRcvdCounterAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167603</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>28b31fa8-4d8d-4b86-9e1a-80585f537daf</id>
              <name>MirthRcvdCounterAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492744</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>517b8c85-9da8-43ef-933c-5e7fbb2c474a</id>
              <name>MirthRcvdCounterAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207514</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>961e3e8f-e9fe-438e-8afe-80f1a0954293</id>
              <name>MirthRcvdCounterAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252585</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>51f63c31-fedb-4000-8207-0bec5113049c</id>
              <name>MirthRcvdCounterAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>845dde36-a2af-4f89-a3cf-5795ca7dc227</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500881</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1332f400-ff2b-41d9-9ac1-f2ad98afccb7</id>
              <name>MirthRcvdCounterAlertsFunctionForACK1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068499</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8e414428-22a1-458d-a437-54b870a33a05</id>
              <name>MirthRcvdCounterAlertsFunctionForACK11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373368</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>35bb346d-6d7e-4f86-9897-83950165d404</id>
              <name>MirthRcvdCounterAlertsFunctionForACK22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414352</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ff392f84-6cc6-4774-894c-b65583341e8d</id>
              <name>MirthRcvdCounterAlertsFunctionForACK33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445207</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa9566b3-52a9-4b8d-9e4a-966d65d5e437</id>
              <name>MirthRcvdCounterAlertsFunctionForACK4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>956b1ddb-c1a3-4f2f-8fd8-766ac544998a</id>
              <name>MirthRcvdCounterAlertsFunctionForACK44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492606</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dffc8508-f86b-470e-9be1-a3c20a43b370</id>
              <name>MirthRcvdCounterAlertsFunctionForACK5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207556</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6ae4f0c5-fd99-408d-b028-28a82e1679d2</id>
              <name>MirthRcvdCounterAlertsFunctionForACK6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252640</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a9c44ad3-a410-4f60-95f5-9a4023efd36c</id>
              <name>MirthRcvdCounterAlertsFunctionForACK8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292546</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>2811c681-f8f9-418e-a3d8-444f73bf393a</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500818</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bd954cbb-7f03-412d-a940-e32a8a11a7d1</id>
              <name>V2H Date Change1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068576</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a221937e-860e-4361-afc9-b0f2222fdaa2</id>
              <name>V2H Date Change11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373592</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>01977bc4-41b0-4721-9e08-8b896fda7ca5</id>
              <name>V2H Date Change22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414161</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5110ca7a-956f-46ac-b850-8b56e32a323e</id>
              <name>V2H Date Change33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445389</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e2236300-3000-4109-b0ad-9c2c89c1b06c</id>
              <name>V2H Date Change4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167673</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5c5fb4be-a443-4871-8af9-039fd42b08aa</id>
              <name>V2H Date Change44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492867</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a7734218-419b-4fe7-9032-5832398fe1e0</id>
              <name>V2H Date Change5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207661</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>d7989778-c82d-4f70-bd89-cce46fd40eb3</id>
              <name>V2H Date Change6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252696</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ad673099-8976-4470-93e7-c15be699ccda</id>
              <name>V2H Date Change8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292484</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
      </codeTemplateLibraries>
    </channel>
    <channel version="3.4.2">
      <id>90053578-f12c-4230-be2e-90bf65599acc</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>dummy_inbound_to_outbound_table_RIS_test</name>
      <description></description>
      <enabled>false</enabled>
      <lastModified>
        <time>1550136142711</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <revision>2</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.jdbc.DatabaseReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>5000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <driver>org.postgresql.Driver</driver>
          <url>jdbc:postgresql://10.10.5.31:5432/docit_qa_oav</url>
          <username>oav_admin</username>
          <password>oav@112233#</password>
          <select>var dbConn;
var dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;org.postgresql.Driver&apos;,&apos;jdbc:postgresql://10.10.5.31:5432/docit_qa_oav&apos;,&apos;oav_admin&apos;,&apos;oav@112233#&apos;);
var result = dbConn.executeCachedQuery(&quot;SELECT T_inboundHIS.MsgControlID AS HL7InboundMessage_MessageID,msg AS HL7InboundMessage_HL7Message FROM T_inboundHIS WHERE msg like &apos;%OVRAD O01 SEND%&apos; and msgtype=&apos;ORM^O01&apos; and status=2&quot;);
dbConn.close();
return result;</select>
          <update>// This update script will be executed once for every result returned from the above query.
var dbConn;

try {
	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;Please Select One&apos;,&apos;&apos;,&apos;&apos;,&apos;&apos;);

} finally {
	if (dbConn) { 
		dbConn.close();
	}
}</update>
          <useScript>true</useScript>
          <cacheResults>true</cacheResults>
          <keepConnectionOpen>true</keepConnectionOpen>
          <updateMode>1</updateMode>
          <retryCount>3</retryCount>
          <retryInterval>10000</retryInterval>
          <fetchSize>1000</fetchSize>
          <encoding>DEFAULT_ENCODING</encoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8
cmVzdWx0Pg0KICAgIDxobDdpbmJvdW5kbWVzc2FnZV9tZXNzYWdlaWQ+dmFsdWU8L2hsN2luYm91
bmRtZXNzYWdlX21lc3NhZ2VpZD4NCiAgICA8aGw3aW5ib3VuZG1lc3NhZ2VfaGw3bWVzc2FnZT52
YWx1ZTwvaGw3aW5ib3VuZG1lc3NhZ2VfaGw3bWVzc2FnZT4NCjwvcmVzdWx0Pg0K</inboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.2">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.2">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>Database Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>Destination 1</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>Please Select One</driver>
            <url></url>
            <username></username>
            <password></password>
            <query></query>
            <useScript>false</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries>
        <codeTemplateLibrary version="3.4.2">
          <id>3b402060-1297-470c-bcb4-716d35eac750</id>
          <name>Library 1</name>
          <revision>12</revision>
          <lastModified>
            <time>1550124543311</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>0930707b-8ac9-4517-a731-8a88ecc1b5e4</string>
            <string>e3330f6d-f0eb-4bb8-903a-4aca422f1d37</string>
            <string>d5c4d42b-44b1-437d-a958-d0497cb227e3</string>
            <string>9d6f470e-9960-4ab2-a46f-07781e50659d</string>
            <string>94085157-241f-4100-814c-f8284d4ea014</string>
            <string>b13e8580-74b4-4284-b010-0cd936b9b1d8</string>
            <string>98eb8d3f-2777-4ab4-ba1c-f9a88c3f083d</string>
            <string>93ec97d8-aed5-43cd-b455-3df4568e05a7</string>
            <string>883c9458-66cd-4ff3-a09e-cc473a6e4c61</string>
            <string>232e1f16-29db-494b-9344-7280249bb9b6</string>
            <string>105076f4-125e-4493-9b84-91103a637bff</string>
            <string>53589a71-2f65-44a2-ba2d-af4d2046a461</string>
            <string>d617b9e0-b2c3-46da-9bcd-618aba628f97</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>f9bc433c-9bb4-4738-b9b0-bf97b34debf5</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>7c397de3-59d6-414a-9814-024ed7a3310f</string>
            <string>637f1ed7-efaa-4a54-91f6-4238379bfceb</string>
            <string>4ecd041f-73af-423e-ad46-2619602b4a78</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>6ce16191-36c0-4880-8497-377a83aa3082</string>
            <string>1666255f-4e27-4cdf-b182-009267a86bb4</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>eeed1b0b-b1ed-4ab2-a1d1-13eb549f7bbe</string>
            <string>41f93ad4-ecc1-4b38-9ddd-e75f952e682a</string>
            <string>839df7ae-3898-40c8-9319-c91a80739433</string>
            <string>eab9cf10-c82e-46ee-abc7-1b59016f098a</string>
            <string>7ff46f90-1d0b-4524-b4c1-bb7ee34558c5</string>
            <string>fbbb34e7-028d-4b6f-8d50-e76913cdb1f1</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>1fd7370d-da00-4a5e-9404-d78d7214bcda</string>
            <string>c0741da3-afa9-4d76-b7a5-8eedd8066225</string>
            <string>d7f029cb-7fe4-4e46-917c-919aca3a079c</string>
            <string>ddcd1526-8070-402e-bb5f-2091635bc9e1</string>
            <string>9eb3a4b4-464a-4888-81fe-47f60690f8ea</string>
            <string>5d8a378c-f55a-471b-a90c-ca1c8a3cef5a</string>
            <string>2b4ad534-3043-4980-bf15-e2334b696503</string>
            <string>0c9c3346-195b-4c3e-8833-666c8fffa0b0</string>
            <string>d9d49577-9e22-4841-8d40-53354126e6bc</string>
            <string>10d97a0b-c021-4529-8323-1cdf5cb16759</string>
            <string>f2358521-3965-45d8-b10e-75f9fbab3134</string>
            <string>01daa3a3-4329-4ea0-98a7-2f05a2a344b2</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>66b55822-506d-4afe-a196-fb65f1db91d4</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>1677d4fb-8fbb-4d11-b246-8a5584280617</string>
            <string>260287bc-1bc6-4b4e-a382-98b51f11a74c</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>812ce55e-14c7-46d9-beeb-e746ce630183</string>
            <string>1c838bb0-8bb2-4a56-aa79-d2116d0100ea</string>
            <string>65d70067-6b01-4af7-bdf1-af4f242c55d2</string>
            <string>bf03e255-0058-4ec9-851d-61c875751ee1</string>
            <string>d8842088-989b-4e6c-89cb-79441471a4a6</string>
            <string>f91cfe88-1171-4296-b377-518def435067</string>
            <string>7472d142-7885-4677-ba13-c7203db6988c</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>9ff78e04-94a8-4373-90b2-db2a28003081</string>
            <string>79eb47bd-c499-4339-b378-4337eed28536</string>
            <string>d4e79d61-51b2-4446-9d02-48fcf6392651</string>
            <string>0fab424d-56ff-44db-afbe-114869361d13</string>
            <string>e82c928b-33bd-4fb3-9a99-0d851adaa82f</string>
            <string>da3848ba-1da8-4401-9916-b7cda474cbbc</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>10b3d862-4394-498e-b9d5-870037691a8c</string>
            <string>0a3b7e51-be83-466a-add5-6400c45aa8b2</string>
            <string>5a5f6536-66e8-42cf-b9aa-d502a2c3b414</string>
            <string>51ae3581-e3eb-4746-b634-5912a6edaade</string>
            <string>ca3a0496-a538-4df1-b7b5-29165d27227a</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>5638c05f-5afa-467c-8c45-140c60dd8fca</string>
            <string>860a9df1-92e3-4131-86f0-f25201fbb683</string>
            <string>40128672-2ba8-4dc3-8faa-c3b09dbcc8a5</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>35a52068-12f3-4c8d-97b8-e51676a21c13</string>
            <string>98a69b54-8eb6-4a11-a45c-b94b50f16671</string>
            <string>5177210a-55a7-46d8-b632-d2469131f5a9</string>
            <string>0eb149da-4b38-416a-9a9a-59adf19fa664</string>
            <string>159574a3-4d34-4a79-9884-bea5dc42ebe7</string>
            <string>ba9c26c5-0fa8-4ff6-bc54-513cdf570733</string>
            <string>63af1bb3-d1e9-4e77-b358-645d7b4351d5</string>
            <string>c41317dd-1d69-44c8-b1fb-4eabae5b20bc</string>
            <string>31c94c2a-9d00-440b-aadf-b7b1bb7d4bc7</string>
            <string>b07e26af-668b-464b-bd83-e6ba73895a66</string>
            <string>58275a8e-d406-42a4-a81b-64214ea10d17</string>
            <string>ed69ab1e-d270-4414-8061-e869365eb7a9</string>
            <string>f6084ffe-b7f8-437f-b159-57bf2639ac47</string>
            <string>d43231bc-4e28-4da7-98d4-1ce2e84e4a89</string>
            <string>a466faf4-a6ed-4efb-b6da-131309ae7c60</string>
            <string>36324d8e-0936-44bb-9728-fd2b73e167fc</string>
            <string>0189af55-85ad-4bdc-94e7-7cc2ebf5a397</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>160ed5a9-cf99-447b-b1ad-9243f2d73d16</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>2bb13ab0-9c7a-453e-a086-3cfacb9139e6</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347472</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a10e956f-24d7-4dc0-8881-874d638f66fa</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347365</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>138de25a-39db-4929-824e-7e47fc5fb581</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347626</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5de22490-ea08-42c6-b843-e3e347ba51c5</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347769</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>53f0b1a0-17b1-480f-8a6e-6253dc6e2a55</id>
              <name>Template 1</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347708</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function new_function1(arg1) {
	// TODO: Enter code here
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1d28e258-01c7-468b-a464-fbe37771160d</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1529906347549</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
        <codeTemplateLibrary version="3.4.2">
          <id>f6441cbe-8e2f-42a4-bccc-a9c7ed446807</id>
          <name>Library 2</name>
          <revision>16</revision>
          <lastModified>
            <time>1550124543279</time>
            <timezone>Asia/Kolkata</timezone>
          </lastModified>
          <description></description>
          <includeNewChannels>true</includeNewChannels>
          <enabledChannelIds>
            <string>92743ae8-a745-455c-a433-b23c84ba8614</string>
            <string>2a2d594e-78d5-42a1-a6ba-d56e45fc809e</string>
            <string>2a5f9a2c-7de4-4ba7-8cd8-abb6866ab69d</string>
            <string>a6ab0cce-4c40-41b3-9306-4d0fbe2e7042</string>
            <string>fe3b2587-55e6-4827-92c2-2c51c588b8b0</string>
            <string>5f7a5987-9eb0-40c6-b9b7-d531c4e63372</string>
            <string>e9527a1d-7bc8-4828-b17d-c3eb1e202e0b</string>
            <string>39c1b8a0-11c3-435f-ba69-9d6c825c7890</string>
            <string>bde2e59c-e420-40ba-8310-30cdb86479c1</string>
            <string>d4a71fdf-ac13-4843-ae25-a5a2b56f0d90</string>
            <string>e58d8cc6-7bb1-4134-bda8-16af67df1f8a</string>
            <string>8ed861fe-99a2-43da-a6e7-50ab2fb96172</string>
            <string>53374354-f1c8-4040-b73a-8257be2b4cf7</string>
            <string>1fdac583-e991-48f1-9562-879950f47c19</string>
            <string>6f1a24e4-7df9-4741-b109-da2b6df00891</string>
            <string>c491713e-cdc5-4b51-9b73-3a44d110381b</string>
            <string>2ed3ff90-9e18-48a8-bf89-fea0b2217a79</string>
            <string>4f562f51-3462-458b-a24c-b2dbbf31140f</string>
            <string>c8adc3f3-024b-48c9-bed9-2b57a2a7f8e5</string>
            <string>1d18266b-a871-49f5-83c8-0d999a4b416d</string>
            <string>52528a47-ea6c-4700-8c03-7c936c23a5bb</string>
            <string>c3b158a7-833f-496c-b359-ae74f0c048b4</string>
            <string>eb1e2ac4-de08-45e9-8caf-d5e2e94e0780</string>
            <string>ccfd4b16-7fda-44d2-8cee-013452f7eacb</string>
            <string>dd5d20dc-99bb-4a81-9baa-f78594d8d201</string>
            <string>98f2297b-a970-4f3b-aad1-89fc84584756</string>
            <string>a53129f7-0a53-4bc1-9813-1c6b64c9bc97</string>
            <string>a38a2b7e-05c7-47c5-ac70-845b8912c035</string>
            <string>d0a09853-846d-4622-8917-28ff3ecb27fd</string>
            <string>0db5a28e-6af5-4fe8-82ef-12b9cbd17b4f</string>
            <string>b6f158b2-805c-40b0-8115-6bc00d960590</string>
            <string>fdbe8417-6d73-47ce-b363-c6b95b259a13</string>
            <string>d4abc7f8-0b1d-48f1-a59f-f8d46fe6c802</string>
            <string>13cf427c-fafb-468d-88a5-74a626db0a91</string>
            <string>42726867-5469-4070-8aeb-b2ed3a1f060b</string>
            <string>e36267e9-3de6-4335-ab6a-69f1f4e306e4</string>
            <string>9df9ac8f-2fa8-4a8f-ba7f-3058bc616b45</string>
            <string>89c0b661-15ee-4998-b66b-d225aa4f9de9</string>
            <string>d512019b-c914-432b-9fa5-fbcc993e7ec7</string>
            <string>e84f2fe6-bcb8-4570-8161-45d30acb65e6</string>
            <string>e17d0add-34c7-4528-b7dd-86489bc7095f</string>
            <string>02cb5f6f-5483-48c9-b897-b132a5da3fb8</string>
            <string>47b078ca-972a-4fe9-8f48-953cfd39749e</string>
            <string>8b6b203b-70de-4160-b160-e11fa0d4c050</string>
          </enabledChannelIds>
          <disabledChannelIds/>
          <codeTemplates>
            <codeTemplate version="3.4.2">
              <id>52676843-ba2e-4109-9daf-21ca5ada681f</id>
              <name>GetCurrentHL7DateTime</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500785</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>77732e63-d702-4364-b827-58943bce53b9</id>
              <name>GetCurrentHL7DateTime1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068540</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>59f8d35e-8b5a-409b-b1b9-73f14b70ad63</id>
              <name>GetCurrentHL7DateTime11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373417</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e3be9605-1812-4317-99da-29d695938639</id>
              <name>GetCurrentHL7DateTime22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414216</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5662cfc5-0796-4252-b5d4-4853a0c02ed4</id>
              <name>GetCurrentHL7DateTime33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445319</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6bf95548-a7fe-451d-80fe-7841b982a2db</id>
              <name>GetCurrentHL7DateTime4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167552</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f4a50b68-d6a3-47b8-a816-73a98fba68c4</id>
              <name>GetCurrentHL7DateTime44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492803</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa4737d6-53d5-4669-95de-341034e2d039</id>
              <name>GetCurrentHL7DateTime5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207700</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a000d1b4-41e2-4fec-ad81-d84f5c4b57bb</id>
              <name>GetCurrentHL7DateTime6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252760</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>67dc77cd-2244-4ec4-a2f4-eec92e070bc8</id>
              <name>GetCurrentHL7DateTime8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292611</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	GetCurrentHL7DateTime
*/
function GetCurrentHL7DateTime() {

	var dateFormat = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	var dateNow = new Packages.java.util.Date();
	return dateFormat.format(dateNow).toString() + &quot;&quot;;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>b3e0d5ae-46e9-4e68-a1ae-5e36fbed19a6</id>
              <name>MirthAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500922</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5259eb99-ebc0-40c7-989a-c9728e88e277</id>
              <name>MirthAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068651</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>f99b26dd-995a-49f9-aa8f-9167cf152877</id>
              <name>MirthAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373537</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>56397ac3-9f19-4037-8101-39d2ad868e64</id>
              <name>MirthAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414295</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb5e5f27-78f2-4081-8c38-16bff17f27f1</id>
              <name>MirthAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445132</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1b3e0a18-4e94-4a1e-b49b-06282c70e434</id>
              <name>MirthAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167501</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>20a831b4-3302-4283-8eff-cc4bd4a9f08f</id>
              <name>MirthAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492663</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>cdaea5c8-2275-4527-a9d8-b940946451b7</id>
              <name>MirthAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207619</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bb89b7ef-8f97-432b-8884-84ef41e05d1f</id>
              <name>MirthAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252807</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e15de9b1-90db-4c8e-b221-6b52431bd229</id>
              <name>MirthAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292657</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthAlertsFunction test
*/
function MirthAlertsFunction(channelID1, channelName1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; +channelName);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// Commands that go with ChannelStatusController
// Start the channel responsible for processing the tables just created
//channelStatusController.startChannel( channelID );

// Stop
//channelStatusController.stopChannel( channelId );

// Pause
//channelStatusController.pauseChannel( channelID );

// Resume
//channelStatusController.resumeChannel( channelID );


// Create an instance of the ChannelStatisticsController object

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Queued Message Count is: &quot; + stats.queued);
// Create Subject and Body
var smtpSubject = channelName + &quot; has Queued messages beyond the threshhold&quot;
var smtpBody = channelName + &quot; has &quot; + stats.queued + &quot; messages in Queued status. Please look into it.&quot;;


if (stats.queued &gt;= &apos;25&apos;)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}
return;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dc6a8f19-863e-4903-a666-8cd4b3df2e51</id>
              <name>MirthRcvdCounterAlertsFunction</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500973</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a34cb3da-1e3b-4ed5-825f-0427a82470c0</id>
              <name>MirthRcvdCounterAlertsFunction1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068615</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>9191af67-946d-4c64-a90e-b0a935006f39</id>
              <name>MirthRcvdCounterAlertsFunction11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373488</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>4435d576-3adb-4e14-9063-1a1cd7e838f4</id>
              <name>MirthRcvdCounterAlertsFunction22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414114</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8562a117-29de-4993-b6c5-a70d3e9fa668</id>
              <name>MirthRcvdCounterAlertsFunction33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445262</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>68652dfa-a24e-43f2-93d9-2777c073cea1</id>
              <name>MirthRcvdCounterAlertsFunction4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167603</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>28b31fa8-4d8d-4b86-9e1a-80585f537daf</id>
              <name>MirthRcvdCounterAlertsFunction44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492744</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>517b8c85-9da8-43ef-933c-5e7fbb2c474a</id>
              <name>MirthRcvdCounterAlertsFunction5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207514</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>961e3e8f-e9fe-438e-8afe-80f1a0954293</id>
              <name>MirthRcvdCounterAlertsFunction6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252585</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>51f63c31-fedb-4000-8207-0bec5113049c</id>
              <name>MirthRcvdCounterAlertsFunction8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunction
*/
function MirthRcvdCounterAlertsFunction(channelID1, channelName1, counter1)
{

logger.error(&quot;Alert Function Triggered For Channel: &quot; + channelName);
// Create an instance of the channelStatusController object
//logger.error(&quot;Alert triggered for Channel&quot; +channelName);
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
// Create Subject and Body
var smtpSubject = channelName + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = channelName + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes. Please look into it.&quot;;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}

counter = stats.received;
//logger.error(&quot;stat = &quot; + stats.received);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>845dde36-a2af-4f89-a3cf-5795ca7dc227</id>
              <name>MirthRcvdCounterAlertsFunctionForACK</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500881</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>1332f400-ff2b-41d9-9ac1-f2ad98afccb7</id>
              <name>MirthRcvdCounterAlertsFunctionForACK1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068499</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>8e414428-22a1-458d-a437-54b870a33a05</id>
              <name>MirthRcvdCounterAlertsFunctionForACK11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373368</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>35bb346d-6d7e-4f86-9897-83950165d404</id>
              <name>MirthRcvdCounterAlertsFunctionForACK22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414352</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ff392f84-6cc6-4774-894c-b65583341e8d</id>
              <name>MirthRcvdCounterAlertsFunctionForACK33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445207</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>fa9566b3-52a9-4b8d-9e4a-966d65d5e437</id>
              <name>MirthRcvdCounterAlertsFunctionForACK4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167712</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>956b1ddb-c1a3-4f2f-8fd8-766ac544998a</id>
              <name>MirthRcvdCounterAlertsFunctionForACK44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492606</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>dffc8508-f86b-470e-9be1-a3c20a43b370</id>
              <name>MirthRcvdCounterAlertsFunctionForACK5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207556</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>6ae4f0c5-fd99-408d-b028-28a82e1679d2</id>
              <name>MirthRcvdCounterAlertsFunctionForACK6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252640</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a9c44ad3-a410-4f60-95f5-9a4023efd36c</id>
              <name>MirthRcvdCounterAlertsFunctionForACK8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292546</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	MirthRcvdCounterAlertsFunctionForACK
*/
function MirthRcvdCounterAlertsFunctionForACK(channelID2, ChannelName12, counter2)
{

//logger.error(&quot;Count of Counter1 in MirthRcvdCounterAlertsFunction is: &quot;+counter);
logger.error(&quot;Alert Function Triggered For Channel: &quot; + ChannelName1);
// Create an instance of the channelStatusController object
var channelStatusController = Packages.com.mirth.connect.server.controllers.ChannelStatusController.getInstance();

// getStatistics
var channelStatisticsController = Packages.com.mirth.connect.server.controllers.ChannelStatisticsController.getInstance();

// Commands that go with ChannelStatisticsController

// Get channel Statistics 
var stats = channelStatisticsController.getStatistics( channelID );

logger.error(&quot;Received Message Count is: &quot; + stats.received);
//logger.error(&quot;Count of Counter2 in MirthRcvdCounterAlertsFunction is: &quot;+counter);

// Create Subject and Body

var smtpSubject = ChannelName1 + &quot; has not received messages in the last 15 minutes.&quot;
var smtpBody = ChannelName1 + &quot; has &quot; + stats.received + &quot; messages. The counter has not increased in the last 15 minutes.&quot;


if (stats.received == counter)
{
logger.error(&quot;Count is greater&quot;);
// send message
var smtpConn = SMTPConnectionFactory.createSMTPConnection();
smtpConn.send(&apos;DL-HCINT-MAXHC-ASM-Support@Dell.com,S_Raina@Dell.com,Akshant_Chauhan@Dell.com&apos;, &apos;Nitin_Kumar3@Dell.com,Saurabh_Bhatnagar1@DELL.com&apos;,&apos;info@maxhealthcare.com&apos;, smtpSubject, smtpBody);
logger.error(&quot;Mail Sent&quot;);
// So we do not get multiple pages will will increment the Alerted stats by 1
channelStatisticsController.incrementAlertedCount( channelID );
}


//logger.error(&quot;stat = &quot; + stats.received);
counter = stats.received;
globalMap.put(&apos;v2hAckRcvdMsgCounter&apos;, counter);

//logger.error(&quot;Returning count value from MirthRcvdCounterAlertsFunction is: &quot;+counter);
return counter;
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>2811c681-f8f9-418e-a3d8-444f73bf393a</id>
              <name>V2H Date Change</name>
              <revision>1</revision>
              <lastModified>
                <time>1536142500818</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>bd954cbb-7f03-412d-a940-e32a8a11a7d1</id>
              <name>V2H Date Change1</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322068576</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a221937e-860e-4361-afc9-b0f2222fdaa2</id>
              <name>V2H Date Change11</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322373592</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>01977bc4-41b0-4721-9e08-8b896fda7ca5</id>
              <name>V2H Date Change22</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322414161</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5110ca7a-956f-46ac-b850-8b56e32a323e</id>
              <name>V2H Date Change33</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322445389</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>e2236300-3000-4109-b0ad-9c2c89c1b06c</id>
              <name>V2H Date Change4</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322167673</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>5c5fb4be-a443-4871-8af9-039fd42b08aa</id>
              <name>V2H Date Change44</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322492867</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>a7734218-419b-4fe7-9032-5832398fe1e0</id>
              <name>V2H Date Change5</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322207661</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>d7989778-c82d-4f70-bd89-cce46fd40eb3</id>
              <name>V2H Date Change6</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322252696</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
            <codeTemplate version="3.4.2">
              <id>ad673099-8976-4470-93e7-c15be699ccda</id>
              <name>V2H Date Change8</name>
              <revision>1</revision>
              <lastModified>
                <time>1536322292484</time>
                <timezone>Asia/Kolkata</timezone>
              </lastModified>
              <type>FUNCTION</type>
              <contextSet>
                <delegate>
                  <contextType>GLOBAL_POSTPROCESSOR</contextType>
                  <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                  <contextType>CHANNEL_BATCH</contextType>
                  <contextType>SOURCE_RECEIVER</contextType>
                  <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  <contextType>GLOBAL_PREPROCESSOR</contextType>
                  <contextType>GLOBAL_DEPLOY</contextType>
                  <contextType>CHANNEL_DEPLOY</contextType>
                  <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                  <contextType>GLOBAL_UNDEPLOY</contextType>
                  <contextType>CHANNEL_UNDEPLOY</contextType>
                  <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                  <contextType>CHANNEL_PREPROCESSOR</contextType>
                  <contextType>CHANNEL_ATTACHMENT</contextType>
                  <contextType>DESTINATION_DISPATCHER</contextType>
                </delegate>
              </contextSet>
              <code>/**
	V2H Date Change
*/
function formatV2HDate( fieldValue ) 
{
	var strDTM = new String(fieldValue.substring(0,14));
	var onlyDate = strDTM.substring(0,8);
	var onlyTime = strDTM.substring(8,14);
	//onlyDate = onlyDate.replace(/-/g, &apos;&apos;)
	//onlyTime = onlyTime.replace(/:/g, &apos;&apos;)
	onlyDate = onlyDate.substring(0,4) + &quot;-&quot; + onlyDate.substring(4,6) + &quot;-&quot; + onlyDate.substring(6,8);
	if(onlyTime.charAt(2) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:00:00&quot;;
	}
	else if(onlyTime.charAt(4) == &quot;-&quot;)
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:00&quot;;
	}
	else
	{
	onlyTime = onlyTime.substring(0,2) + &quot;:&quot; + onlyTime.substring(2,4) + &quot;:&quot; + onlyTime.substring(4,6);
	}
	return (onlyDate + &quot; &quot; + onlyTime);
}</code>
            </codeTemplate>
          </codeTemplates>
        </codeTemplateLibrary>
      </codeTemplateLibraries>
    </channel>
  </channels>
</channelGroup>